{
  "seo": {
    "title": "FAQ ‚Äî H√§ufig gestellte Fragen",
    "description": "Schnelle Antworten zu Wallets, Geb√ºhren, unterst√ºtzten Chains und dem Einstieg.",
    "og-title": "Push Chain FAQ - Alle Fragen",
    "og-description": "Finde schnelle Antworten mit Links zu Guides, testnet und Support.",
    "twitter-title": "FAQ - Hier geht's los",
    "twitter-description": "Schnelle Antworten auf Push Chain Fragen."
  },
  "breadcrumbs": {
    "knowledge-base": "Wissensdatenbank"
  },
  "title": "H√§ufig gestellte Fragen",
  "overview": "## √úberblick\n\nHier findest du Antworten auf alle h√§ufigen Fragen der Community zum Push Chain. Von der Push Fam ü´∂ mit Beitr√§gen und kuratiert vom Push Team üí™.\n\n---",
  "what-is-push-chain": "### Was ist Push Chain?\n\nPush Chain ist eine shared-state Layer 1 Blockchain, die entwickelt wurde, um Fragmentierung √ºber alle Chains hinweg zu beseitigen.\n\nDurch die Erm√∂glichung von **nahtlosen Transaktionen von jeder Chain** (Ethereum, Solana, EVM oder non-EVM) erm√∂glicht sie jedem Nutzer die Interaktion mit Web3 Apps, ohne mit mehreren Wallets, Tokens oder Gas-Mechanismen jonglieren zu m√ºssen.\n\nKurz gesagt, Push Chain vereint L1s ü§ù L2s ü§ù L3s unter einer koh√§siven Layer.\n\n---",
  "how-does-push-chain-work": "### Wie funktioniert Push Chain?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain verfolgt einen einzigartigen Ansatz zur L√∂sung des Problems der Fragmentierung √ºber alle Chains hinweg. Anstatt sich auf interoperability Protokolle zu verlassen, die sowohl f√ºr Nutzer als auch f√ºr Entwickler Komplexit√§t hinzuf√ºgen, verfolgt es einen neuartigen Ansatz, indem es eine echte universelle Blockchain aufbaut, die nativ von jedem Nutzer von jeder Chain verwendet werden kann.\n\nUm dies zu erreichen, nutzt Push Chain mehrere **precompiles** ‚Äì benutzerdefinierte Module, die erstellt wurden, um:\n\n1. **Recognize** Nutzer anderer Chains - Universal Address Standard, der die Adresse eines Nutzers erweitert, um Blockchain-agnostisch zu sein (basierend auf [CAIP-10 standards](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Map** Nutzer auf Push Chain - F√ºr jeden externen Chain-Nutzer wird ein Universal Executor Account (UEA) bereitgestellt. Dieses Modul wird verwendet, um ein Smart Account bereitzustellen, das dann andere precompiles verwendet, um die Transaktionen zu verarbeiten.\n\n3. **Execute** universelle Transaktionen - Dies geschieht durch die Verwendung von USV (Universal Signature Verification) und UTXV (Universal Transaction Verifier) precompiles zur √úberpr√ºfung und Ausf√ºhrung von Signaturen und Transaktionen von anderen Chains.\n\n4. **Abstract** away die Komplexit√§t der Chain, auf der sie sich befinden - Dies geschieht durch universelle Gateway-Vertr√§ge auf jeder Chain, die Gas-Gelder im nativen Token der Chain (oder einem anderen konformen Token) sperren und dann die UTXV precompiles verwenden, um das Gas dem UEA (Executor Account) zuschreiben und USV verwenden, um die Transaktion auszuf√ºhren.\n\nDies ist ein **extrem m√§chtiger Ansatz**, der es Nutzern erm√∂glicht, mit jeder app auf Push Chain zu interagieren, ohne sich Gedanken √ºber die Chain machen zu m√ºssen, auf der sie sich befinden, oder welche wallet sie verwenden, da alles abstrahiert ist, sowohl f√ºr die Nutzer als auch f√ºr die Entwickler.\n\n---",
  "why-unique-for-users": "### Warum ist Push Chain einzigartig f√ºr Nutzer?\n\nPush Chain geht auf spezifische L√ºcken in den bestehenden Blockchains ein, wie Interoperabilit√§t, State Access √ºber verschiedene Chains hinweg, programmierbare Solver und Wallet-Abstraktion, was zu **echter Full-Stack-Interoperabilit√§t** f√ºhrt. W√§hrend bestehende Blockchains robust sind, operieren sie in ihrem eigenen √ñkosystem und es wird ein Aggregator ben√∂tigt, um diese Chains zu vereinen.\n\nPush Chain konzentriert sich darauf, eine **Shared-State-Chain** f√ºr universelle (interoperable) Anwendungen zu sein, die als vereinheitlichende Schicht dient, wo alle Chains zusammenkommen und Push Chain als universeller Hub nutzen oder Settlement zwischen ihnen durchf√ºhren k√∂nnen.\n\nEs bietet ein neues Paradigma von Web3, das von **Any Chain** aus funktioniert. F√ºr **Any Wallet / Nutzer**. Und ist geeignet f√ºr **Any App**.\n\n---",
  "core-innovations": "### Was macht Push Chain innovativ?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain ist eine Proof-of-Stake Layer 1, die entwickelt wurde, um Fragmentierung √ºber jede Blockchain hinweg zu eliminieren. Im Kern kombiniert sie mehrere Schl√ºsselinnovationen:\n\n- **Echte universelle Chain**  \n  Unterst√ºtzt nativ alle Chains und erm√∂glicht es Benutzern, mit derselben app zu interagieren. Es sind keine zentralisierten Relayer, Bridges oder andere Hacks erforderlich.\n\n- **Universelle Fee & Wallet Abstraction**  \n  Erm√∂glicht Benutzern, mit der app von jeder Chain aus zu interagieren, ohne sich Gedanken √ºber gas oder Wallet-Mechanismen machen zu m√ºssen.\n\n- **Eine einzige Transaktion f√ºr jede Chain**  \n  Benutzer m√ºssen nur eine Transaktion signieren, egal auf welcher Chain sie sich befinden.\n\n- **Universelle Smart Contracts**  \n  100 % EVM-kompatible Smart Contracts, die mit **null On-Chain-Code-√Ñnderungen** bereitgestellt werden k√∂nnen. Nach der Bereitstellung werden sie sofort mit Benutzern aller Chains kompatibel.\n\n- **Universelles EVM**  \n  Push Chain ist intelligent genug, um Benutzer anderer Chains nativ zu erkennen und die Transaktionen korrekt zuzuordnen und zuzuordnen.\n\n- **Shared State und Programmable Solvers**  \n  (Roadmap) Erm√∂glicht Smart Contracts von Push Chain, den Status anderer Chains zu lesen und zu schreiben.\n\nZusammen erm√∂glichen diese Funktionen den Aufbau von **universellen web3 apps**. Anstatt \"Uniswap auf Ethereum\" oder \"Uniswap auf Polygon\" wird ein Benutzer einfach zum **Benutzer von Uniswap** ‚Äì Punkt.\n\n---",
  "problems-solved": "### Welche Probleme l√∂st Push Chain?\n\n- **Fragmentierung**  \n  Vereint EVM- und non-EVM-Chains unter einem gemeinsamen shared-state L1, sodass Benutzer niemals zwischen Netzwerken oder Wallets wechseln m√ºssen.\n\n- **Interoperabilit√§t**  \n  Native Unterst√ºtzung f√ºr Transaktionen von jeder Blockchain und On-Chain shared State.\n\n- **Finality**  \n  Sofortige, irreversible native Finality in etwa 1-2 Sekunden ‚Äì kein Warten oder Reorgs mehr.\n\n- **Onboarding & UX**  \n  Social/E-Mail-Login, Gas-in-any-Token & Any-Wallet-Unterst√ºtzung f√ºr einen reibungslosen Zugriff √ºber alle Chains hinweg.\n\n- **Universal Apps**  \n  Einmal erstellen, √ºberall bereitstellen ‚Äî jede Web3 App funktioniert nahtlos f√ºr jeden Benutzer auf jeder Chain.\n\n---",
  "what-apps-can-build": "### Welche Apps k√∂nnen auf Push Chain gebaut werden?\n\n![Universal App Beispiele](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nMit Push Chains shared-state, cross-chain Architektur sind die M√∂glichkeiten endlos. Hier sind nur einige herausragende Beispiele:\n\n- **Universal DEX**  \n  Eine Swap-Oberfl√§che f√ºr jeden Liquidity Pool ‚Äì abstrahiertes Routing √ºber alle Chains hinweg mit der Geschwindigkeit und UX eines CEX.\n\n- **Universal DeFi**  \n  Eine globale Bank in Ihrem Browser: Lending, Borrowing, Yield-Aggregatoren, die √ñkosysteme √ºberspannen, ohne manuelles Bridging.\n\n- **Universal AI Agents**  \n  Autonome Agents, die in jedem Token auf jeder Chain bezahlen und bezahlt werden ‚Äì perfekt f√ºr Abonnementdienste, Datenbots und mehr.\n\n- **Universal DAOs**  \n  Cross-Chain Governance, bei der Token-Holder √ºber Vorschl√§ge abstimmen und diese unabh√§ngig von ihrer Ursprungs-Chain umsetzen.\n\n- **Universal Gaming**  \n  Multiplayer-Turniere und In-Game-√ñkonomien, die Spieler und Assets von Ethereum, Solana, Polygon und dar√ºber hinaus vereinen.\n\n- **Universal Marketplace**  \n  Kaufen, verkaufen und tauschen Sie NFTs und Tokens von jeder Chain auf einem konsolidierten Marktplatz.\n\n- **Universal Name Service**  \n  Lesbare Namen, die sich √ºber mehrere Blockchains hinweg auf Wallets aufl√∂sen.\n\nThe Apps und Innovationen, die auf Push Chain m√∂glich sind, sind endlos! Hier sind einige [mehrere Anwendungsf√§lle](/blog/consumer-apps-that-can-be-built-on-push-chain/) zum Starten. Entwickler k√∂nnen auch das [Dokumentations-Hub](/docs/) konsultieren, um loszulegen.\n\n---",
  "technical-section": "## Technische Details",
  "why-not-an-l2": "### Warum nicht L1 und kein L2?\n\nPush Chain wurde entwickelt, um als **gemeinsame Settlement-Schicht** und **universelle Execution-Schicht** f√ºr alle anderen Blockchains zu dienen ‚Äì Rollen, die nur ein eigenst√§ndiges L1 erf√ºllen kann:\n\n- **Native Cross-Chain Settlement**  \n  Als L1 kann Push Chain Transaktionen von jeder Chain direkt finalisieren, ohne sich auf externe Sicherheitsmodelle oder Betrugsnachweise verlassen zu m√ºssen.\n\n- **Universelle Execution & State Access**  \n  Durch den Betrieb eines eigenen Konsenses und einer eigenen State Machine kann Push Chain Transaktionen von Ethereum, Solana und dar√ºber hinaus interpretieren und ausf√ºhren ‚Äì etwas, das ein L2 ‚Äì das an eine Basis-Layer gebunden ist ‚Äì nativ nicht kann.\n\n- **Keine L2-Beschr√§nkungen oder Verz√∂gerungen**  \n  L2s erben die Latenz, Finalit√§tsregeln und das Gas-Modell ihrer Host-Chain (plus Br√ºcken-Overhead). Push Chain vermeidet diese Engp√§sse, indem es sofortige Finalit√§t und universelle Fee Abstraction auf der Basis-Layer bietet.\n\n- **Echter Shared State**  \n  Um den State mehrerer Chains innerhalb von Smart Contracts zu lesen und zu schreiben, ben√∂tigen Sie direkten, Protokoll-Zugriff ‚Äì nur verf√ºgbar auf der L1-Layer.\n\nKurz gesagt, nur ein speziell entwickeltes L1 kann jede Chain unter einer koh√§renten Execution- und Settlement-Layer vereinen ‚Äì ohne zus√§tzliche Komplexit√§t oder zus√§tzliche Vertrauensannahmen.\n\n---",
  "evm-compatibility": "### Ist Push Chain EVM-kompatibel?\n\nJa, Push Chain ist **EVM-kompatibel** und noch viel mehr. Es unterst√ºtzt:\n\n- **EVM Smart Contracts**: Deployen Sie Solidity-Vertr√§ge genau wie auf Ethereum\n- **Ethereum Tooling**: Verwenden Sie MetaMask, Hardhat, Remix und andere vertraute Tools\n- **Universal Extensions**: Zus√§tzliche Precompiles f√ºr Cross-Chain-Funktionalit√§t\n- **Multi-VM Support**: (Roadmap) Unterst√ºtzung f√ºr andere VMs wie SVM (Solana), MoveVM usw.\n\nDies bedeutet, dass Entwickler:\n- Bestehende Ethereum dApps mit minimalen √Ñnderungen portieren k√∂nnen\n- Vertraute Entwicklungsworkflows und Tools nutzen k√∂nnen\n- √úber die universellen Funktionen von Push Chain auf verbesserte Cross-Chain-Funktionen zugreifen k√∂nnen\n\nIn der Praxis k√∂nnen Benutzer und Apps von jeder Chain nahtlos mit Push Chain-Apps interagieren ‚Äî unabh√§ngig von der zugrunde liegenden VM.\n\n---",
  "evm-non-evm-compatible": "### Wird Push Chain sowohl mit EVM- als auch mit Nicht-EVM-Chains kompatibel sein?\n\nJa! Push Chain ist darauf ausgelegt, jede Blockchain-Paradigma zu √ºberbr√ºcken.\n\n- **EVM Compatibility**  \n  Lass deine Solidity-Contracts einfach fallen und sie laufen unver√§ndert, unter Nutzung der EVM-Runtime von Push Chain.\n\n- **Non-EVM Support**  \n  Native Precompiles (USV/UTXV) und der universale Adressstandard lassen Push Chain Transaktionen von Solana, Bitcoin, Cosmos SDK Chains und mehr validieren und ausf√ºhren.\n\nIn der Praxis k√∂nnen Nutzer und Apps von jeder Chain nahtlos mit Push Chain Apps interagieren ‚Äî unabh√§ngig von der zugrunde liegenden VM.\n\n---",
  "why-not-ethereum-or-solana": "### Warum eine neue Blockchain erstellen, wenn es bereits bestehende wie Ethereum und Solana gibt?\n\nBestehende Blockchains zeichnen sich in ihren spezifischen Bereichen aus, schaffen aber **Fragmentierung**:\n\n- **Ethereum**: Gro√üartig f√ºr DeFi, aber teuer und langsam\n- **Solana**: Schnell und g√ºnstig, aber andere Tools und √ñkosystem\n- **L2s**: L√∂sen Skalierungsprobleme, schaffen aber noch mehr Fragmentierung\n\nPush Chain konkurriert nicht mit diesen Chains ‚Äì sie **vereint sie**:\n\n- Nutzer k√∂nnen mit Push Chain Apps ihre bestehenden Wallets nutzen (MetaMask, Phantom, etc.)\n- Bezahle Gas mit ihren bevorzugten Tokens (ETH, SOL, USDC)\n- Entwickler entwickeln einmal, anstatt auf mehreren Chains zu deployen\n- Liquidity und Nutzer von allen Chains k√∂nnen in den gleichen Apps interagieren\n\nPush Chain ist das **fehlende Teil**, das alle bestehenden Chains nahtlos zusammenarbeiten l√§sst.\n\n---",
  "shared-state-meaning": "### Was bedeutet shared-state Blockchain?\n\nShared State bezieht sich auf den aktuellen Status von Onchain-Daten. Eine Shared-State Blockchain hat Lese- und Schreibzugriff auf ihren eigenen Zustand und den Zustand aller anderen Ketten, mit denen sie interagiert.\n\nEine Shared-State Kette ist in der Lage, Daten, Liquidit√§t und Nutzer von jeder anderen Kette zu verarbeiten.\n\n---",
  "how-achieve-shared-state": "### Wie erreicht Push Chain einen Shared State?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nEine traditionelle Blockchain kennt nur ihr eigenes Ledger und ihren eigenen wallet Standard. Push Chain erweitert dieses Modell in vier Schl√ºsselbereichen:\n\n1. **Universal Wallet Kompatibilit√§t**  \n\t- Unterst√ºtzt kettenagnostische Adressen von jeder Kette (Ethereum, Solana, Bitcoin, Cosmos SDK, etc.)  \n\t- Signaturen von jeder Kette werden via USV/UTXV precompiles verifiziert, so dass Nutzer niemals ihre wallets wechseln m√ºssen.\n\n2. **Universal Smart Contracts**  \n\t- EVM contracts werden unver√§ndert deployed, k√∂nnen aber native cross-chain Transaktionen verifizieren und ausf√ºhren.  \n\t- Die Runtime von Push Chain verarbeitet Signature Mapping und Payload Parsing f√ºr jedes unterst√ºtzte Netzwerk.\n\n3. **On-Chain Shared State**  \n\t- Validatoren committen Merkle Proofs des externen Ketenstatus (via MPT Roots) in jedem Block.  \n\t- Relayer holen und reichen Leaf Proofs bei Bedarf ab, so dass contracts jederzeit Daten von jeder Kette lesen k√∂nnen.\n\n4. **Programmable Solvers**  \n\t- Ein Solver Netzwerk f√ºhrt atomare cross-chain Workflows aus (z.B. swap auf Chain A, mint auf Chain B) unter einer einzigen Transaktion.  \n\t- Entwickler schreiben einfache Solver Scripts; das Netzwerk verarbeitet Routing und Ausf√ºhrung.\n\nZusammen machen diese Features Push Chain zu einer **shared-state L1**, die universellen apps erm√∂glicht, nativ zu allen Ketten zu sein. Eine Welt, in der jeder Nutzer jeder Kette in der Lage ist, auf jede app auf jeder anderen Kette zuzugreifen und mit ihr zu interagieren.\n\n**Any Chain, Any App, Any User - One Push Chain**\n\n---",
  "consensus-mechanism": "### Welches Konsensverfahren verwendet Push Chain?\n\nPush Chain verwendet ein **Proof-of-Stake (PoS)** Konsensverfahren, basierend auf der **CometBFT** Engine, mit mehreren Verbesserungen:\n\n- **Schnelle Finalit√§t**: Transaktionen werden in ca. 1‚Äì2 Sekunden finalisiert, mit deterministischer Finalit√§t (keine Reorgs)\n- **Energieeffizient**: PoS ist umweltfreundlicher als PoW\n- **Validator-Netzwerk**: Dezentrales Netzwerk von Validatoren, das die Chain sichert\n- **Slashing-Schutz**: Wirtschaftliche Anreize gew√§hrleisten die Ehrlichkeit der Validatoren\n\nCometBFT‚Äôs bew√§hrtes BFT-Konsensverfahren ist hier f√ºr die besonderen Anforderungen an universelle Transaktionsverarbeitung und Cross-Chain State Management optimiert.\n\n---",
  "transaction-fees": "### Wie funktionieren Transaktionsgeb√ºhren auf Push Chain?\n\nPush Chain revolutioniert die Zahlungsabwicklung mit **Universal Fee Abstraction**:\n\n- **Bezahlen mit beliebigem Token**: Nutzer k√∂nnen Gas in ETH, SOL, USDC oder jedem unterst√ºtzten Token bezahlen\n- **Cross-Chain Geb√ºhrenzahlung**: Bezahlen Sie Geb√ºhren von Ihrer Ursprungskette aus, ohne eine Br√ºcke nutzen zu m√ºssen\n- **Geb√ºhrenlose Transaktionen**: Apps k√∂nnen Nutzer-Transaktionen f√ºr ein nahtloses Nutzererlebnis sponsern\n- **Dynamischer Geb√ºhrenmarkt**: Geb√ºhren passen sich an die Netzwerknachfrage an\n\nDas bedeutet, dass Nutzer niemals native Push Chain Tokens erwerben m√ºssen, um mit Apps zu interagieren.\n\n---",
  "true-universal-chain": "### Was bedeutet True Universal Chain?\n\nEine **true universal chain** ist eine Blockchain, die jedes andere Netzwerk als gleichwertig behandelt ‚Äì keine Bridges, keine zentralisierten Relayer und keine Kompatibilit√§tshacks. Sie bietet:\n\n1. **Native Multichain-Identit√§t**  \n\tWallets von Ethereum, Solana, jeder EVM- oder non-EVM-Chain signieren, verifizieren und f√ºhren nativ auf Push Chain aus. So m√ºssen Nutzer niemals Konten wechseln oder sich mit der Komplexit√§t mehrerer Wallets herumschlagen.\n\n2. **Einheitliche Abwicklung**  \n\tTransaktionen aus jedem Netzwerk werden auf Push Chain endg√ºltig abgewickelt, wodurch jeder eine einzige Quelle der Wahrheit erh√§lt und dieselbe app f√ºr Nutzer aller Chains zug√§nglich wird.\n\n3. **Einheitliche Transaktion und universelle Fee-Abstraktion**  \n\tNutzer signieren nur eine Transaktion, unabh√§ngig von ihrer Quell-Chain und zahlen gas in jedem Token. Kein Muss mehr, unz√§hlige Tokens zu pflegen oder zu tauschen, um eine app zu nutzen.\n\n4. **Einmal bereitstellen, √ºberall nutzen**  \n\tEntwickler schreiben und stellen smart contracts einmal (EVM oder anders) ohne **jeglichen** zus√§tzlichen Code bereit ‚Äì eine Bereitstellung deckt alle Chains ab.\n\nPush Chain ist die erste, die diese Funktionen direkt in ihren Konsens und ihre Laufzeit einbaut und Fragmentierung wirklich beseitigt ‚Äì keine Workarounds, keine zus√§tzlichen Layer, nur eine universelle Chain f√ºr alle.\n\n---",
  "competitors-section": "## Wettbewerber",
  "vs-other-universal": "### Was Push Chain von anderen Universal L√∂sungen unterscheidet?\n\nDie sogenannten \"universal\" L√∂sungen von heute verlassen sich immer noch auf Bridges, erfordern doppelte Transaktionen oder zentralisierte Relayer, um Daten und Wert zu verschieben. Push Chain ist anders ‚Äì es ist die erste **wahre** universelle L1, die:\n\n- **Nutzer √ºber Ketten hinweg vereint**  \n\tJede Blockchain-Adresse wird nativ unterst√ºtzt. Wallets wie MetaMask, Phantom, etc. sind alle mit Push Chain kompatibel. Gas wird in jedem Token auf jeder Kette bezahlt.\n\n- **Als universelle Execution Layer fungiert**  \n\tAlle Transaktionen werden auf derselben Kette finalisiert, was sicherstellt, dass jeder mit derselben app interagiert ‚Äì keine Hacks, keine Umwege.\n\n- **Transaktionen jeder Kette korrekt zuordnet & ausf√ºhrt**  \n\tTransaktionen werden signiert, verifiziert und Wallets auf ihren Quellketten zugeordnet. Eine wahre universelle Kette unterst√ºtzt sie alle.\n\n---",
  "vs-bridges-messaging": "### Wie unterscheidet sich dies von Bridges oder Messaging-Layern?\n\n**Kurze Antwort**: Push ist, wo deine App l√§uft. Bridges/Messaging bewegen nur <token> oder Nachrichten zwischen Chains, was alles f√ºr Benutzer und Entwickler erschwert.\n\n- **Ein Home vs. viele Klone**  \n\tMit Bridges/Messaging deployst du pro Chain und synchronisierst √ºber Nachrichten. Auf Push deployst du einmal; jeder trifft den gleichen Contract und <shared-state>.\n\n- **Keine Wrapped Assets oder obligatorische Bridging**  \n\tBenutzer bleiben auf ihrer Home Chain und bezahlen mit dem, was sie bereits besitzen; wir k√ºmmern uns im Hintergrund um Routing und Geb√ºhrenumrechnung.\n\n- **Einheitliche Identit√§t & Verifizierung**  \n\tWir akzeptieren Signaturen von jedem <wallet>/Chain und schreiben sie dem gleichen Benutzer auf Push zu ‚Äî nicht-kustodial.\n\n- **Weniger bewegliche Teile**  \n\tKein Cross-Chain-Approval-Tanz, keine Gas-<token>-Jagd, keine Glue-Contracts, die synchron gehalten werden m√ºssen.\n\n- **Nutze Bridges, wenn du willst, nicht weil du musst**  \n\t<liquidity> kann weiterhin √ºber Bridges bewegt werden, aber die Interaktion mit deiner App erfordert dies nicht.\n\n**Resultat**: einfachere Apps, eine einzige Quelle der Wahrheit und ein UX, das sich wie eine Chain anf√ºhlt ‚Äî auch wenn die Benutzer es nicht sind.\n\n---",
  "vs-layerzero": "### Wie unterscheidet sich Push Chain von LayerZero?\n\n**LayerZero:**\n- **Messaging Protokoll**: Erm√∂glicht Cross-Chain Nachrichten√ºbertragung\n- **Relayer Abh√§ngigkeit**: Verl√§sst sich auf externe Relayer und Oracles\n- **Entwickler Integration**: Apps m√ºssen das LayerZero SDK integrieren\n- **Vertrauensannahmen**: Nutzer m√ºssen der Relayer-Infrastruktur vertrauen\n\n**Push Chain:**\n- **Native Ausf√ºhrung**: Direkte Transaktionsausf√ºhrung von jeder Chain\n- **Keine Relayer**: Eingebaute Cross-Chain Funktionalit√§t auf Protokollebene\n- **Zero Integration**: Bestehende Apps funktionieren ohne √Ñnderungen\n- **Trust-Minimiert**: Keine zus√§tzlichen Vertrauensannahmen √ºber den eigenen Konsens von Push Chain hinaus\n\nPush Chain bietet native Cross-Chain Ausf√ºhrung, w√§hrend LayerZero zus√§tzliche Infrastruktur und Integration erfordert.\n\n---",
  "vs-wormhole": "### Wie unterscheidet sich Push Chain von Wormhole?\n\n**Wormhole:**\n- **Bridge Protocol**: Haupts√§chlich auf Token- und NFT-Bridging fokussiert\n- **Wrapped Assets**: Erstellt Wrapped-Versionen von Tokens auf verschiedenen Chains\n- **Guardian Network**: Verl√§sst sich auf validator set zur Verifizierung von Cross-Chain-Nachrichten\n- **Multi-Step Process**: Benutzer m√ºssen Assets br√ºcken, bevor sie apps verwenden\n\n**Push Chain:**\n- **Universal Execution**: Benutzer interagieren direkt, ohne Bridging\n- **Native Assets**: Keine Wrapped-Tokens erforderlich, verwenden Sie Original-Assets\n- **Direct Verification**: Native Signaturverifizierung von jeder Chain\n- **Single Transaction**: Benutzer interagieren in einem Schritt, kein Bridging erforderlich\n\nPush Chain eliminiert die Notwendigkeit von Asset-Bridging, w√§hrend Wormhole dies f√ºr Cross-Chain-Interaktionen erfordert.\n\n---",
  "vs-axelar": "### Wie unterscheidet sich Push Chain von Axelar?\n\n**Axelar:**\n- **Netzwerk der Netzwerke**: Verbindet Chains √ºber das Axelar-Netzwerk\n- **Validator-Abh√§ngigkeit**: Verl√§sst sich auf das Axelar Validator Set f√ºr Sicherheit\n- **Gateway-Vertr√§ge**: Erfordert Gateway-Deployments auf jeder Chain\n- **Message Passing**: Konzentriert sich auf Cross-Chain-Kommunikation\n\n**Push Chain:**\n- **Direkte Ausf√ºhrung**: Transactions werden nativ auf Push Chain ohne Zwischenh√§ndler verarbeitet\n- **Unabh√§ngige Sicherheit**: Eigenst√§ndiger Konsens ohne externe Abh√§ngigkeiten\n- **Universal Contracts**: Ein einzelner Deployment funktioniert f√ºr alle Chains\n- **Native Ausf√ºhrung**: Direkte Transaktionsverarbeitung von jeder Chain\n\nPush Chain bietet direkten universellen Zugang, w√§hrend Axelar eine zus√§tzliche Zwischenschicht hinzuf√ºgt.\n\n---",
  "vs-chainlink-ccip": "### Wie unterscheidet sich Push Chain von Chainlink CCIP?\n\n**Chainlink CCIP:**\n- **Oracle Netzwerk**: Nutzt die Chainlink Oracle-Infrastruktur\n- **Message Routing**: Leitet Nachrichten zwischen verschiedenen Chains weiter\n- **Externe Abh√§ngigkeit**: Verl√§sst sich auf das dezentrale Netzwerk von Chainlink\n- **Integration erforderlich**: Apps m√ºssen CCIP integrieren, um Cross-Chain-Funktionen zu nutzen\n\n**Push Chain:**\n- **Integrierter Protokoll**: Cross-Chain-Funktionalit√§t ist nativ im Blockchain integriert\n- **Direkte Ausf√ºhrung**: Kein externes Oracle-Netzwerk erforderlich\n- **Selbstst√§ndig**: Alle Verifizierungen und Ausf√ºhrungen erfolgen auf Push Chain\n- **Automatische Kompatibilit√§t**: Vorhandene Contracts deployen ‚Äî sie funktionieren direkt f√ºr alle Benutzer\n\nPush Chain hat Cross-Chain-Funktionen, die in das Kernprotokoll integriert sind, w√§hrend CCIP eine externe Dienstebene ist.\n\n---",
  "vs-particle-network": "### Wie unterscheidet sich Push Chain von Particle Network?\n\n**Particle Network:**\n- **Fokus auf Account Abstraction**: Konzentriert sich haupts√§chlich auf Wallet Abstraction und Social Login\n- **Multi-Chain Wallets**: Erstellt eine einheitliche Wallet-Erfahrung √ºber verschiedene Chains hinweg\n- **SDK-Integration**: Erfordert die Integration des Particle SDK f√ºr die Funktionalit√§t\n- **User Experience Layer**: Funktioniert als Layer √ºber bestehenden Chains\n\n**Push Chain:**\n- **Universal Blockchain**: Native Blockchain, die alle Chain-Benutzer unterst√ºtzt\n- **Protokoll-Level Integration**: Cross-Chain-Funktionalit√§t ist in den Konsens integriert\n- **Kein SDK erforderlich**: Bestehende Wallets funktionieren nativ ohne Modifikation\n- **Baselayer**: Bietet die zugrunde liegende Blockchain-Infrastruktur, nicht nur ein UX-Layer\n\nPush Chain ist eine universal Blockchain, w√§hrend Particle Network ein Wallet Abstraction Service ist.\n\n---",
  "vs-agglayer": "### Wie unterscheidet sich Push Chain von AggLayer?\n\n**AggLayer (Polygon):**\n- **Aggregation Layer**: Aggregiert Liquidit√§t und Status √ºber Polygon-Ketten hinweg\n- **Polygon Ecosystem**: Speziell f√ºr Polygon CDK-Ketten entwickelt\n- **Shared Sequencing**: Bietet einheitliches Sequencing f√ºr verbundene Ketten\n- **Ecosystem Specific**: Auf das Polygon-Ketten-√ñkosystem beschr√§nkt\n\n**Push Chain:**\n- **Universal Chain**: Funktioniert mit jeder Blockchain, nicht √∂kosystemspezifisch\n- **Native Execution**: Direkte Transaktionsausf√ºhrung von jeder Kette\n- **Chain Agnostic**: Unterst√ºtzt Ethereum, Solana, Bitcoin und alle anderen\n- **One Deployment, Universal Apps**: Einmal einen smart contract auf Push Chain deployen und er wird f√ºr Nutzer von jeder Kette zug√§nglich ‚Äî erm√∂glicht wahre App-Level Interoperabilit√§t\n\nPush Chain erm√∂glicht universelle Anwendungen mit einem einzigen Deployment √ºber alle Blockchains hinweg, w√§hrend AggLayer sich auf Liquidit√§ts- und Sequencing-Aggregation innerhalb des Polygon-√ñkosystems konzentriert.\n\n---",
  "vs-cosmos": "### Wie unterscheidet sich Push Chain von Cosmos?\n\nBeide erm√∂glichen Cross-Chain-Funktionalit√§t, aber die Ans√§tze sind grundlegend verschieden:\n\n**Cosmos:**\n- **Hub-and-Spoke-Modell**: Chains verbinden sich √ºber das IBC-Protokoll\n- **Separate √ñkosysteme**: Jede Chain beh√§lt ihren eigenen Zustand und ihre eigenen Benutzer\n- **Manuelles Bridging**: Benutzer m√ºssen Assets zwischen Chains br√ºcken\n- **Entwicklerkomplexit√§t**: Ben√∂tigt Deployments auf mehreren Chains\n\n**Push Chain:**\n- **Universal Chain**: Eine einzige Chain, die nativ alle Benutzer unterst√ºtzt\n- **Shared State**: Ein vereinheitlichter Zustand, der von jeder Chain aus zug√§nglich ist\n- **Kein Bridging**: Benutzer interagieren direkt von ihrer Ursprungs-Chain\n- **Einmal Deployen**: Ein einzelnes Deployment funktioniert f√ºr alle Chain-Benutzer\n\nPush Chain macht manuelles Bridging und Multi-Chain-Deployments √ºberfl√ºssig und bietet eine einfachere, vereinheitlichte UX.\n\n---",
  "vs-polkadot": "### Wie unterscheidet sich Push Chain von Polkadot?\n\n**Polkadot:**\n- **Parachain Modell**: Begrenzte Slots f√ºr verbundene Chains\n- **Relay Chain Abh√§ngigkeit**: Alle Parachains sind von der Sicherheit der Relay Chain abh√§ngig\n- **Substrate Framework**: Erfordert ein spezifisches Entwicklungsframework\n- **Auktionssystem**: Teure Parachain Slot Auktionen\n\n**Push Chain:**\n- **Universelle Unterst√ºtzung**: Unterst√ºtzt nativ jede bestehende Chain\n- **Unabh√§ngige Sicherheit**: Eigenes Konsens- und Validator Set\n- **EVM Kompatibel**: Verwenden Sie bestehende Ethereum-Tools und -Vertr√§ge\n- **Keine Auktionen**: Direkte Integration ohne Wettbewerbsgebot\n\nPush Chain integriert sich direkt in bestehende Chains, w√§hrend Polkadot erfordert, dass Chains als Parachains neu aufgebaut werden.\n\n---",
  "token-section": "## Token-bezogen",
  "new-token": "### Wird es einen neuen Token geben, der mit Push Chain verbunden ist?\n\nAls neue layer 1 w√ºrde Push Chain ihren eigenen nativen Token mit einer Tokenomics haben, die auf die Funktion, Wartung und Sicherheit einer Blockchain zugeschnitten ist.\n\nAlle Details finden Sie in unserem [Tokenomics Deep Dive](/knowledge/tokenomics/) üëÄ.\n\n---",
  "developers-section": "## Entwickler, Nutzer und Node-Betreiber",
  "early-adopter-incentives": "### Gibt es Anreize f√ºr Early Adopters oder node operators auf Push Chain?\n\nnode operators erhalten staking rewards, sobald das mainnet startet und werden ermutigt, am **Push Points Program** teilzunehmen, um rewards zu verdienen.\n\nEarly Adopters werden ermutigt, am **Push Points Program** teilzunehmen, um rewards zu verdienen. Beginne mit einem Besuch auf [Push Portal](https://portal.push.org/).\n\n---",
  "developer-user-benefits": "### Welche Vorteile bietet Push Chain Entwicklern und Nutzern?\n\n**üßô F√ºr Entwickler**\n\n- **Einmal deployen, 10√ó gr√∂√üere Reichweite**  \nDeployen Sie Ihre App einmal ‚Äì ohne Code√§nderungen ‚Äì und sie l√§uft auf jeder unterst√ºtzten Chain, sogar auf nicht-EVM-Netzwerken.\n\n- **Audit-freundlich, 100% EVM-kompatibel**  \nNutzen Sie bestehende Solidity-Contracts ohne zus√§tzliche Audits oder Umschreibungen ‚Äì konzentrieren Sie Ihr Budget auf Features, nicht auf die Infrastruktur.\n\n- **Einheitliche, reibungslose UX**  \nNutzer signieren eine Transaktion, zahlen in jedem Token und interagieren √ºber jede Wallet ‚Äì Ihre App funktioniert einfach √ºberall.\n\n- **Blitzschnelle DX**  \nStarten Sie mit unseren SDKs, virtuellen Editoren und React Playgrounds ‚Äì von Null auf Live in Minuten.\n\n**ü¶π F√ºr Nutzer**\n\n- **Ein-Klick-Onboarding**  \nLogin mit E-Mail, sozialen Netzwerken oder einer bestehenden Wallet ‚Äì keine Seed Phrasen oder Chain-Hopping mehr.\n\n- **Nahtlose Interaktionen**  \nGas, Wallet und Chain-Komplexit√§ten sind verborgen ‚Äì genie√üen Sie Apps, als w√§ren sie nativ f√ºr Ihr Netzwerk.\n\n- **Wir sind schnell**  \nTransaktionen finalisieren in 1‚Äì2 Sekunden, f√ºhlen sich an wie nativ f√ºr die Chain, auf der Sie sich befinden.\n\n---",
  "how-to-build": "### Wie k√∂nnen Entwickler mit dem Bau auf Push Chain beginnen?\n\nüöÄ Besuchen Sie unser [Dokumentationszentrum](/docs/), um alles zu erhalten, was Sie ben√∂tigen:\n\n- üñ•Ô∏è **Virtuelle Code-Editoren**: Starten Sie SDK-Funktionsaufrufe in Ihrem Browser  \n- ‚öõÔ∏è **React Playground**: Prototypisieren Sie Ihr Frontend in Echtzeit  \n- üìö **End-to-End-Beispiele**: Folgen Sie vollst√§ndigen Projektanleitungen  \n\nSie haben in wenigen Minuten eine Beispiel-app live ‚Äì keine lokale Einrichtung erforderlich!\n\n---",
  "dao-section": "## DAO und Zusch√ºsse",
  "governance-changes": "### Wie wird sich das aktuelle Governance-System mit dem Start des neuen Tokens √§ndern?\n\nDas Push DAO Governance-System wird sich sowohl weiterentwickeln als auch erweitern, da Push Chain startet. Dies ist ein erwarteter Prozess, da Push umfassender wird als das Original.\n\nDelegierte, Ambassador-Programme, SubDAOs und andere DAO-Initiativen werden aktualisiert, um die wichtigsten Ziele zu erreichen, als Hub f√ºr universelle Anwendungen zu fungieren, betrieben von allen Gruppen, die sie m√∂glich machen.\n\n---",
  "doubts-section": "## Fragen",
  "push-services-future": "### Was passiert mit Push-Benachrichtigungen und Push-Chat?\n\nPush Chain ist eine nat√ºrliche Weiterentwicklung der Vision des Push Protokolls. Die aktuellen Services des Push Protokolls bleiben weiterhin eine Priorit√§t und werden kontinuierlich verbessert, w√§hrend sie von der neuen Infrastruktur profitieren.\n\nDie heutigen Push-Benachrichtigungs- und Chat-Protokolle werden erheblich davon profitieren, auf der Push Chain aufgebaut zu sein. Ein eigenes Team wird sich auf die Wartung und Verbesserung dieser Protokolle konzentrieren und sicherstellen, dass sie in ihren jeweiligen Bereichen der De-facto-Standard bleiben.\n\nDurch die Ausrichtung auf Push Chain werden Benachrichtigungen und Chats, die √ºber die Protokolle gesendet werden, als Transaktionen auf der Kette verarbeitet. Diese Integration erm√∂glicht es diesen Protokollen nicht nur, Wert zu akkumulieren, sondern markiert auch den Beginn eines neuen Kapitels in ihrer Entwicklung, das ihre N√ºtzlichkeit und ihren Einfluss innerhalb des web3-√ñkosystems weiter verbessert.\n\n---",
  "project-distraction": "### Ist dieses Projekt eine Ablenkung von der Verbesserung der aktuellen Dienste?\n\nNein, lies ‚òùÔ∏è [oben](#what-happens-to-push-notification-and-push-chat).\n\n---",
  "core-focus-shift": "### Ist Push Chain eine Abkehr vom Kerngesch√§ft des Push Protocol, das sich auf Benachrichtigungen und Chat konzentriert?\n\nNein. Push Chain baut auf der etablierten Grundlage des Push Protocol auf. Push Chain stellt die **n√§chste Weiterentwicklung** des Push Protocol dar, nicht eine Abkehr davon.\n\n---",
  "partnerships-effect": "### Wie wird der Start von Push Chain bestehende Partnerschaften und Integrationen beeinflussen?\n\nPush Chain erg√§nzt bestehende Partnerschaften durch zus√§tzliche Funktionen wie Cross-Chain-Unterst√ºtzung, schnellere Finality und skalierbare L√∂sungen. Es st√§rkt die Zusammenarbeit, indem es Partnern erm√∂glicht, universelle Anwendungen aufzubauen und zu skalieren.\n\n---",
  "decentralization-scaling": "### Wie wird Push Chain Dezentralisierung bei der Skalierung beibehalten?\n\nUnser Devnet hat gezeigt, wie wir mithilfe von dynamischem Sharding und paralleler Ausf√ºhrung skalieren‚Äîum den Durchsatz zu erh√∂hen, ohne die Dezentralisierung zu beeintr√§chtigen.\n\nAuf dem testnet haben wir uns auf eine vollst√§ndige Interoperabilit√§t mit der chain konzentriert, die auf [CometBFT](https://github.com/cometbft/cometbft) l√§uft, einer bew√§hrten, Byzantinisch fehlertoleranten Engine. Das Netzwerk erreichte eine Sub-Sekunden-Finality und ist in der Lage, bis zu [20k transactions per minute](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md) zu verarbeiten.\n\nDieser Proof of Concept ist erst der Anfang. Wenn wir in sp√§teren Phasen weitere Skalierungsoptimierungen einf√ºhren, sind wir zuversichtlich, dass Push Chain die Anforderungen von universal Anwendungen erf√ºllen kann‚Äîsicher und ohne Zentralisierung.\n\n---",
  "centralization-risks": "### Gibt es Zentralisierungsrisiken beim Push Chain?\n\n**Nein.** Die Architektur von Push Chain betont Dezentralisierung.\n\nPush Chain ist vollst√§ndig dezentralisiert und auf Robustheit und Widerstandsf√§higkeit ausgelegt. Jeder kann einen node betreiben und am Netzwerk teilnehmen und wird durch PoS incentiviert oder bestraft. Zusammenfassend:\n\n- Validators und andere Akteure operieren unabh√§ngig und werden durch PoS incentiviert.\n- Governance-Mechanismen gew√§hrleisten die Beteiligung der Community.\n- Jede Partei im √ñkosystem ist in gewissem Umfang in die Governance eingebunden.\n\nUm mehr dar√ºber zu erfahren, wie man einen node betreibt, siehe unsere [Knowledge Base](/knowledge/) oder schau dir unser [Validator Node Repo](https://github.com/pushchain/push-chain-node) an.\n\n---",
  "support-section": "## Support und Engagement",
  "need-help": "### Ich brauche Hilfe, wo kann ich Push Chain kontaktieren?\n\nF√ºr Support k√∂nnen Sie [hier ein Ticket einreichen](https://push.org/support) oder uns unter support@push.org kontaktieren.\n\nWenn Sie ein Entwickler sind, k√∂nnen Sie uns auch auf unserem [Discord](https://discord.com/invite/pushchain) kontaktieren und wir helfen Ihnen gerne weiter.\n\n---",
  "how-to-contribute": "### Super, wie kann ich mithelfen?\n\nDer beste Weg, um √ºber den Fortschritt von Push Chain auf dem Laufenden zu bleiben, sind die offiziellen Push-Kan√§le: Website, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject) und [Discord](https://discord.com/invite/pushchain).\n\nSeien Sie immer vorsichtig vor Phishing-Versuchen, gef√§lschten Websites oder Betrugsversuchen, die Ihre Krypto verlangen. Alle offiziellen Mitteilungen werden von unseren offiziellen Push-Kan√§len ver√∂ffentlicht.\n\n---"
}