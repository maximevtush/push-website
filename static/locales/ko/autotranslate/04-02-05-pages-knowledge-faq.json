{
  "pages": {
    "knowledge": {
      "faq": {
        "seo": {
          "title": "FAQ — 큐레이팅된 자주 묻는 질문",
          "description": "지갑, 수수료, 지원되는 체인, 시작하는 방법에 대한 빠른 답변.",
          "og-title": "Push Chain FAQ - 모든 질문",
          "og-description": "가이드, 테스트넷, 지원에 대한 링크를 통해 빠르게 답변을 찾으세요.",
          "twitter-title": "FAQ - 시작하기",
          "twitter-description": "Push Chain 관련 질문에 대한 빠른 답변입니다."
        },
        "explainer-section": {
          "breadcrumbs": {
            "knowledge-base": "지식 기반"
          },
          "blocks": {
            "title": "자주 묻는 질문",
            "sections": {
              "faq-overview": {
                "items": {
                  "overview": "## 개요\n\nPush Chain에 대한 커뮤니티의 질문에 대한 답변을 찾을 수 있는 곳입니다. Push Fam으로부터 집단 지혜를 얻고 Push 팀에서 큐레이션했습니다 💪.\n\n---",
                  "what-is-push-chain": "### Push Chain이란 무엇인가요?\n\nPush Chain은 모든 체인 간의 파편화를 제거하기 위해 구축된 shared-state Layer 1 블록체인입니다.\n\n**어떤 체인(Ethereum, Solana, EVM 또는 non-EVM)에서든 원활한 트랜잭션**을 가능하게 함으로써 사용자는 여러 개의 지갑, 토큰 또는 가스 메커니즘을 저글링하지 않고도 web3 앱과 상호 작용할 수 있습니다.\n\n요컨대 Push Chain은 L1 🤝 L2 🤝 L3를 하나의 응집력 있는 레이어 하에 통합합니다.\n\n---",
                  "how-does-push-chain-work": "### Push Chain은 어떻게 작동하나요?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain은 모든 체인 간의 단편화를 해결하는 데 독특한 접근 방식을 취합니다. 상호 운용성 프로토콜에 의존하는 대신, 사용자 및 개발자 모두에게 복잡성을 더하는 대신, 모든 체인의 사용자가 기본적으로 사용할 수 있는 진정한 범용 블록체인을 구축하여 새로운 접근 방식을 취합니다.\n\n이를 달성하기 위해 Push Chain은 다음과 같은 여러 **precompiles**을 활용합니다. 이는 사용자 정의 모듈로 다음과 같은 기능을 수행합니다.\n\n1. **Recognize** 다른 체인의 사용자 - 블록체인에 관계없이 사용자의 주소를 확장하는 범용 주소 표준(CAIP-10 표준 기반 [https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Map** 사용자를 Push Chain에 매핑 - 각 외부 체인 사용자에 대해 Universal Executor Account(UEA)가 배포됩니다. 이 모듈은 다른 precompiles를 사용하여 트랜잭션을 처리하는 스마트 계정을 배포하는 데 사용됩니다.\n\n3. **Execute** 범용 트랜잭션 실행 - 이는 다른 체인에서 서명 및 트랜잭션을 확인하고 실행하기 위해 USV(Universal Signature Verification) 및 UTXV(Universal Transaction Verifier) precompiles를 사용하여 수행됩니다.\n\n4. **Abstract** 체인의 복잡성 숨김 - 이는 각 체인에 네이티브 토큰(또는 다른 준수 토큰)의 가스 자금을 잠그고 UEA(Executor Account)에 가스를 속성하고 트랜잭션을 실행하기 위해 UTXV precompiles를 사용하여 모든 사용자와 개발자 모두에 대한 복잡성을 숨김으로써 수행됩니다.\n\n이것은 사용자가 자신이 있는 체인이나 사용하고 있는 지갑에 대해 걱정하지 않고 Push Chain의 모든 앱과 상호 작용할 수 있도록 모든 것이 추상화되어 사용자 및 개발자 모두에게 매우 **강력한 접근 방식**입니다.\n\n---",
                  "why-unique-for-users": "### 왜 Push Chain이 사용자에게 특별할까요?\n\nPush Chain은 기존 블록체인의 특정 격차, 예를 들어 interoperability, 체인 간 state 접근, programmable solvers 및 wallet abstraction을 해결하여 **진정한 풀스택 interoperability**를 제공합니다. 기존 블록체인은 견고하지만 자체 에코시스템에서 작동하며, 이러한 체인을 통합하는 어그리게이터가 필요합니다.\n\nPush Chain은 universal(interoperable) 애플리케이션을 위한 **shared state chain**으로, 모든 체인이 함께 모여 Push Chain을 universal hub으로 사용하거나 체인 간 결제에 활용할 수 있는 통합 레이어에 중점을 둡니다.\n\nPush Chain은 **Any Chain**에서 **Any Wallet / User**에게 적합하며, **Any App**에 적용 가능한 새로운 Web3 패러다임을 제공합니다.\n\n---",
                  "core-innovations": "### 푸시 체인이 혁신적인 이유는 무엇인가요?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\n푸시 체인은 모든 블록체인 간의 파편화를 제거하도록 설계된 지분 증명 레이어 1입니다. 내부적으로 몇 가지 주요 혁신을 결합합니다:\n\n- **진정한 유니버설 체인** \n  모든 체인을 기본적으로 지원하며 사용자가 동일한 앱과 상호 작용할 수 있도록 합니다. 중앙 집중식 릴레이어, 브리지 또는 기타 해킹이 필요하지 않습니다.\n\n- **유니버설 수수료 및 월렛 추상화** \n  사용자가 수수료나 월렛 메커니즘을 걱정하지 않고 모든 체인에서 앱과 상호 작용할 수 있도록 합니다.\n\n- **모든 체인에 대한 단일 트랜잭션** \n  사용자는 어떤 체인에 있든 상관없이 항상 하나의 트랜잭션만 서명합니다.\n\n- **유니버설 스마트 컨트랙트** \n  온체인 코드 변경 없이 배포할 수 있는 100% EVM 호환 스마트 컨트랙트입니다. 배포되면 모든 체인 사용자와 즉시 호환됩니다.\n\n- **유니버설 EVM** \n  푸시 체인은 다른 체인 사용자를 기본적으로 인식하고 트랜잭션을 올바르게 속성하고 매핑할 만큼 똑똑합니다.\n\n- **공유 상태 및 프로그래밍 가능한 솔버** \n  (로드맵) 푸시 체인의 스마트 컨트랙트가 다른 체인의 상태를 읽고 쓸 수 있도록 합니다.\n\n이러한 기능들을 통해 **유니버설 웹3 앱**을 구축할 수 있습니다. “이더리움의 Uniswap” 또는 “Polygon의 Uniswap” 대신 사용자는 단순히 **Uniswap 사용자**가 됩니다 — 그게 전부입니다.\n\n---",
                  "problems-solved": "### Push Chain은 어떤 문제를 해결하나요?\n\n- **Fragmentation (단편화)**  \n  사용자가 네트워크나 <wallet>을 계속 옮길 필요 없이 하나의 공유 상태 L1으로 EVM 및 non-EVM 체인을 통합합니다.\n\n- **Interoperability (상호 운용성)**  \n  어떤 <blockchain>의 <transaction>도, 온체인 공유 상태를 기본적으로 지원합니다.\n\n- **Finality (최종성)**  \n  약 1-2초 안에 즉각적이고 되돌릴 수 없는 기본 <finality> – 더 이상 기다리거나 <reorg>를 할 필요가 없습니다.\n\n- **Onboarding & UX (온보딩 및 UX)**  \n  소셜/이메일 로그인, 모든 <token>으로 <gas> 지불 및 모든 <wallet> 지원으로 모든 체인에서 제로 프릭션 액세스가 가능합니다.\n\n- **Universal Apps (유니버설 앱)**  \n  한 번 빌드하고 어디든 배포하세요 — 모든 웹3 앱은 어떤 체인의 어떤 사용자에게도 원활하게 작동합니다.\n\n---",
                  "what-apps-can-build": "### 어떤 앱을 Push Chain에서 만들 수 있나요?\n\n![Universal App Examples](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nPush Chain의 shared-state, cross-chain 아키텍처를 통해 무한한 가능성이 열립니다. 몇 가지 주요 예시는 다음과 같습니다.\n\n- **Universal DEX**  \n  모든 유동성 풀에 대한 단일 스왑 UI – CEX의 속도와 UX로 모든 체인에서 추상화된 라우팅.\n\n- **Universal DeFi**  \n  브라우저 안의 글로벌 은행: 수동 브리징 없이 생태계를 아우르는 대출, 차용, 수익 집계기.\n\n- **Universal AI Agents**  \n  모든 체인의 모든 토큰으로 지불하고 보상을 받는 자율 에이전트 – 구독 서비스, 데이터 봇 등에 적합.\n\n- **Universal DAOs**  \n  토큰 보유자가 원산 체인에 관계없이 투표하고 제안을 실행하는 cross-chain 거버넌스.\n\n- **Universal Gaming**  \n  Ethereum, Solana, Polygon 등을 통합하는 멀티플레이어 토너먼트 및 인게임 경제.\n\n- **Universal Marketplace**  \n  모든 체인의 NFT 및 토큰을 하나의 통합 마켓플레이스에서 구매, 판매, 거래.\n\n- **Universal Name Service**  \n  여러 블록체인에서 지갑에 연결되는 사람이 읽기 쉬운 이름.\n\nPush Chain에서 일어날 수 있는 앱과 혁신은 끝이 없습니다! [더 많은 사용 사례](/blog/consumer-apps-that-can-be-built-on-push-chain/)를 확인하여 시작해 보세요. 개발자는 또한 [Documentation Hub](/docs/)를 확인하여 시작할 수 있습니다.\n\n---",
                  "technical-section": "## 기술적인 부분",
                  "why-not-an-l2": "### 왜 L1이 아니고 L2를 사용하지 않나요?\n\nPush Chain은 다른 모든 블록체인의 **공유 정산 레이어** 및 **범용 실행 레이어** 역할을 하도록 구축되었습니다. 이러한 역할을 수행할 수 있는 것은 독립 실행형 L1뿐입니다:\n\n- **네이티브 크로스체인 정산**  \n  L1로서 Push Chain은 외부 보안 모델이나 사기 증명에 의존하지 않고 모든 체인의 트랜잭션을 직접 확정할 수 있습니다.\n\n- **범용 실행 및 상태 접근**  \n  자체 합의 및 상태 머신을 실행하면 Push Chain은 Ethereum, Solana 등을 해석하고 실행할 수 있습니다. 이는 단일 베이스 레이어에 종속된 L2는 기본적으로 수행할 수 없는 작업입니다.\n\n- **L2 제약 조건 또는 지연 없음**  \n  L2는 호스트 체인의 대기 시간, 확정 규칙 및 가스 모델(브리징 오버헤드 포함)을 상속합니다. Push Chain은 이러한 병목 현상을 피하고 베이스 레이어에서 즉각적인 확정 및 범용 수수료 추상화를 제공합니다.\n\n- **진정한 공유 상태**  \n  스마트 컨트랙트 내에서 여러 체인의 상태를 읽고 쓰려면 직접적인 프로토콜 레벨 접근이 필요하며 이는 L1 레이어에서만 사용할 수 있습니다.\n\n요컨대, 목적에 맞게 구축된 L1만이 추가적인 복잡성이나 신뢰 가정 없이 모든 체인을 단일 일관성 있는 실행 및 정산 레이어 아래 통합할 수 있습니다.\n\n---",
                  "evm-compatibility": "### Push Chain이 EVM 호환되나요?\n\n네, Push Chain은 **EVM 호환**이 가능하며 훨씬 더 많은 기능을 제공합니다. 다음을 지원합니다:\n\n- **EVM 스마트 컨트랙트**: 이더리움과 마찬가지로 Solidity 컨트랙트를 배포합니다.\n- **이더리움 도구**: MetaMask, Hardhat, Remix 및 기타 익숙한 도구를 사용합니다.\n- **유니버설 확장**: 크로스체인 기능을 위한 추가 사전 컴파일\n- **멀티 VM 지원**: (로드맵) Solana(SVM), MoveVM 등 다른 VM에 대한 지원\n\n이것은 개발자가 다음을 수행할 수 있음을 의미합니다:\n- 기존 이더리움 DApp을 최소한의 변경으로 포팅합니다.\n- 익숙한 개발 워크플로우 및 도구를 사용합니다.\n- Push Chain의 유니버설 기능을 통해 향상된 크로스체인 기능을 액세스합니다.\n\n실제로 모든 체인의 사용자와 앱은 기본 VM에 관계없이 Push Chain 앱과 원활하게 상호 작용할 수 있습니다.\n\n---",
                  "evm-non-evm-compatible": "### Push Chain이 EVM 및 non-EVM 체인 모두와 호환될까요?\n\n네! Push Chain은 모든 블록체인 패러다임을 연결하도록 구축되었습니다.\n\n- **EVM 호환성**  \n  Solidity 컨트랙트를 바로 사용할 수 있으며 Push Chain의 EVM 런타임을 활용합니다.\n\n- **Non-EVM 지원**  \n  네이티브 프리컴파일 (USV/UTXV) 및 universal address 표준을 통해 Push Chain은 Solana, Bitcoin, Cosmos SDK 체인 등의 트랜잭션을 검증하고 실행할 수 있습니다.\n\n실제로 어떤 체인의 사용자나 앱이든 Push Chain 앱과 원활하게 상호 작용할 수 있습니다 — 기반 VM에 관계없이.\n\n---",
                  "why-not-ethereum-or-solana": "### 기존 이더리움이나 솔라나와 같은 블록체인이 이미 존재할 때 새로운 블록체인을 만들려는 이유는 무엇인가요?\n\n기존 블록체인은 특정 영역에서 뛰어난 성능을 발휘하지만 **분열**을 야기합니다:\n\n- **Ethereum**: DeFi에는 좋지만 비용이 비싸고 느립니다.\n- **Solana**: 빠르고 저렴하지만 다른 툴링과 생태계를 가지고 있습니다.\n- **L2s**: 확장을 해결하지만 더 많은 분열을 만듭니다.\n\nPush Chain은 이러한 체인과 경쟁하지 않고 **통합**합니다:\n\n- 사용자는 기존 지갑(MetaMask, Phantom 등)을 사용하여 Push Chain 앱과 상호 작용할 수 있습니다.\n- 선호하는 토큰(ETH, SOL, USDC)으로 gas를 지불합니다.\n- 개발자는 여러 체인에 배포하는 대신 한 번만 빌드합니다.\n- 모든 체인의 유동성과 사용자는 동일한 앱에서 상호 작용할 수 있습니다.\n\nPush Chain은 기존 체인이 원활하게 함께 작동하도록 하는 **누락된 부분**입니다.\n\n---",
                  "shared-state-meaning": "### 공유 상태 블록체인은 무엇을 의미하나요?\n\n공유 상태는 온체인 데이터의 현재 상태를 의미합니다. 공유 상태 블록체인은 자체 상태와 상호 작용하는 모든 다른 체인의 상태에 읽기 및 쓰기 액세스 권한을 가진 블록체인입니다.\n\n공유 상태 체인은 다른 체인의 데이터, 유동성 및 사용자를 처리할 수 있습니다.\n\n---",
                  "how-achieve-shared-state": "### Push Chain은 어떻게 공유 상태를 달성하나요?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA 전통적인 블록체인은 자체 원장과 wallet 표준만 알고 있습니다. Push Chain은 4가지 주요 방식으로 해당 모델을 확장합니다:\n\n1. **Universal Wallet 호환성**  \n\t- Ethereum, Solana, Bitcoin, Cosmos SDK 등 모든 체인의 체인에 구애받지 않는 주소를 지원합니다.  \n\t- USV/UTXV precompile을 통해 모든 체인의 서명을 확인하므로 사용자는 wallet를 전환할 필요가 없습니다.\n\n2. **Universal 스마트 계약**  \n\t- EVM 계약은 변경 없이 배포되지만, cross-chain 트랜잭션을 기본적으로 확인하고 실행할 수 있습니다.  \n\t- Push Chain의 런타임은 모든 지원 네트워크에 대한 서명 매핑 및 페이로드 구문을 처리합니다.\n\n3. **온체인 공유 상태**  \n\t- Validators는 각 블록마다 외부 체인 상태의 Merkle 증명(MPT 루트를 통해)을 커밋합니다.  \n\t- Relayers는 요청 시 leaf 증명을 가져와 제출하므로 계약은 실시간으로 모든 체인의 데이터를 읽을 수 있습니다.\n\n4. **Programmable Solvers**  \n\t- Solver 네트워크는 단일 트랜잭션 내에서 원자적 cross-chain 워크플로우(예: Chain A에서 swap, Chain B에서 mint)를 실행합니다.  \n\t- 개발자는 간단한 solver 스크립트를 작성하고, 네트워크는 라우팅 및 실행을 처리합니다.\n\n이러한 기능들을 통해 Push Chain은 모든 체인에 native한 universal app을 가능하게 하는 **shared-state L1**이 됩니다. 사용자가 어떤 체인이든 어떤 체인의 어떤 app에든 액세스하고 상호 작용할 수 있는 세상입니다.\n\n**어떤 체인이든, 어떤 App이든, 어떤 사용자든 - One Push Chain**\n\n---",
                  "consensus-mechanism": "### Push Chain은 어떤 합의 메커니즘을 사용하나요?\n\nPush Chain은 **지분 증명 (PoS)** 합의 메커니즘을 사용하며, **CometBFT** 엔진을 기반으로 다음과 같은 몇 가지 개선 사항이 적용되었습니다:\n\n- **빠른 최종성**: 거래는 약 1~2초 내에 확정되며, 결정론적 최종성을 보장합니다(reorg 없음)\n- **에너지 효율적**: PoS는 PoW에 비해 환경적으로 지속 가능합니다\n- **검증자 네트워크**: 체인을 보호하는 분산형 검증자 네트워크\n- **슬래싱 보호**: 경제적 인센티브는 검증자의 정직성을 보장합니다\n\nCometBFT의 검증된 BFT 합의는 고유한 요구 사항에 맞게 여기에 최적화되었습니다. universal 트랜잭션 처리 및 크로스체인 상태 관리.\n\n---",
                  "transaction-fees": "### Push Chain에서 트랜잭션 수수료는 어떻게 작동하나요?\n\nPush Chain은 **Universal Fee Abstraction**으로 수수료 결제를 혁신합니다:\n\n- **어떤 토큰으로든 결제**: 사용자는 ETH, SOL, USDC 또는 지원되는 모든 토큰으로 가스 수수료를 지불할 수 있습니다.\n- **크로스체인 수수료 결제**: 브리징 없이 원본 체인에서 수수료를 지불할 수 있습니다.\n- **가스리스 트랜잭션**: 앱이 사용자 트랜잭션을 후원하여 원활한 UX를 제공할 수 있습니다.\n- **동적 수수료 시장**: 수수료는 네트워크 수요에 따라 조정됩니다.\n\n즉, 사용자는 앱과 상호 작용하기 위해 기본 Push Chain 토큰을 획득할 필요가 없습니다.\n\n---",
                  "true-universal-chain": "### 진정한 유니버설 체인이란 무엇인가요?\n\n**진정한 유니버설 체인**은 다른 모든 네트워크를 1등 시민으로 취급하는 블록체인입니다—브리지, 중앙 집중식 릴레이어, 호환성 해킹이 없습니다. 다음과 같은 기능을 제공합니다:\n\n1. **네이티브 멀티체인 아이덴티티**\n\t이더리움, 솔라나, 모든 EVM 또는 non-EVM 체인의 지갑은 Push Chain에서 네이티브로 서명, 확인 및 실행합니다. 따라서 사용자는 계정을 전환하거나 여러 지갑의 복잡성에 신경 쓸 필요가 없습니다.\n\n2. **통합된 정산**\n\t모든 네트워크의 트랜잭션이 Push Chain에서 최종적으로 처리되어 모두에게 단일 진실 공급원을 제공하고 모든 체인의 사용자가 동일한 앱에 액세스할 수 있도록 합니다.\n\n3. **단일 트랜잭션 및 유니버설 수수료 추상화**\n\t사용자는 소스 체인과 관계없이 단일 트랜잭션에 서명하고 모든 토큰으로 수수료를 지불합니다. 더 이상 수많은 토큰을 유지하거나 교환하여 앱을 사용할 필요가 없습니다.\n\n4. **한 번 배포, 어디서든 사용**\n\t개발자는 추가 코드가 없는 (EVM 또는 기타) 스마트 컨트랙트를 한 번 작성하고 배포합니다—단일 배포는 모든 체인을 포함합니다.\n\nPush Chain은 이러한 기능을 처음으로 컨센서스 및 런타임에 직접 구축하여 진정으로 단편화를 제거합니다—우회 방법이나 추가 레이어가 없습니다—모두를 위한 단일 유니버설 체인입니다.\n\n---",
                  "competitors-section": "## 경쟁사",
                  "vs-other-universal": "### Push Chain은 다른 유니버설 솔루션과 어떻게 다른가요?\n\n오늘날 이른바 \"유니버설\" 솔루션은 여전히 브리지에 의존하거나, 데이터와 가치를 이동하기 위해 이중 트랜잭션 또는 중앙 집중식 릴레이어를 필요로 합니다. Push Chain은 다릅니다— 최초의 **진정한** 유니버설 L1으로 다음과 같은 특징이 있습니다:\n\n- **체인 간 사용자를 통합합니다**  \n\t모든 블록체인 주소가 기본적으로 지원됩니다. MetaMask, Phantom과 같은 왈렛은 모두 Push Chain과 호환됩니다. 모든 체인의 모든 토큰으로 가스를 지불할 수 있습니다.\n\n- **유니버설 실행 레이어 역할을 합니다**  \n\t모든 트랜잭션은 동일한 체인에서 완료되어 모든 사람이 동일한 앱과 상호 작용하도록 보장합니다—해킹이나 우회 방법이 없습니다.\n\n- **어떤 체인의 트랜잭션도 올바르게 속성하고 실행합니다**  \n\t트랜잭션은 소스 체인에서 서명, 확인 및 속성이 지정됩니다. 진정한 유니버설 체인은 모두 지원합니다.\n\n---",
                  "vs-bridges-messaging": "### 이것은 브리지 또는 메시징 레이어와 어떻게 다른가요?\n\n**간단한 답변**: Push는 앱이 실행되는 곳입니다. 브리지/메시징은 단순히 토큰이나 메시지를 체인 간에 이동시키는데, 이는 사용자 및 개발자에게 모든 것을 더 복잡하게 만듭니다.\n\n- **단일 홈 vs 많은 클론**  \n\t브리지/메시징을 사용하면 체인별로 배포하고 메시지를 통해 동기화합니다. Push에서는 한 번 배포하면 됩니다. 모든 사람이 동일한 컨트랙트와 공유 상태에 액세스합니다.\n\n- **래핑된 자산 또는 필수 브리징 불필요**  \n\t사용자는 자신의 홈 체인에 머물면서 자신이 이미 보유한 것을 사용하여 지불합니다. 우리는 내부적으로 라우팅 및 수수료 전환을 처리합니다.\n\n- **통일된 ID 및 인증**  \n\t우리는 모든 지갑/체인에서 서명을 수락하고 Push에서 동일한 사용자에게 귀속합니다 - 비커스터디얼입니다.\n\n- **더 적은 움직이는 부분**  \n\t체인 간 승인 댄스가 필요 없고, 가스 토큰을 사냥할 필요 없고, 동기화를 유지해야 하는 접착 컨트랙트가 없습니다.\n\n- **원할 때 브리지를 사용하고, 필수 사항이 아니기 때문에 사용하세요**  \n\t유동성은 여전히 브리지를 통해 이동할 수 있지만, 앱과 상호 작용하려면 필수는 아닙니다.\n\n**결과**: 더 간단한 앱, 단일 진실 소스 및 사용자가 그렇지 않은 것처럼 느껴지는 UX.\n\n---",
                  "vs-layerzero": "### Push Chain은 LayerZero와 어떻게 다른가요?\n\n**LayerZero:**\n- **메시징 프로토콜**: 체인 간 메시지 전달 활성화\n- **릴레이어 의존성**: 외부 릴레이어 및 오라클에 의존\n- **개발자 통합**: 앱에서 LayerZero SDK를 통합해야 함\n- **신뢰 가정**: 사용자는 릴레이어 인프라를 신뢰해야 함\n\n**Push Chain:**\n- **네이티브 실행**: 모든 체인에서 직접 트랜잭션 실행\n- **릴레이어 없음**: 프로토콜 수준에서 내장된 체인 간 기능\n- **제로 통합**: 기존 앱은 수정 없이 작동\n- **신뢰 최소화**: Push Chain 자체 컨센서스 외에 추가 신뢰 가정 없음\n\nPush Chain은 네이티브 체인 간 실행을 제공하는 반면 LayerZero는 추가 인프라 및 통합이 필요합니다.\n\n---",
                  "vs-wormhole": "### Push Chain은 Wormhole과 어떻게 다른가요?\n\n**Wormhole:**\n- **Bridge Protocol**: 주로 토큰 및 NFT 브리징에 초점\n- **Wrapped Assets**: 다른 체인에서 토큰의 래핑된 버전을 생성\n- **Guardian Network**: 크로스체인 메시지 확인을 위해 validator set에 의존\n- **Multi-Step Process**: 앱을 사용하기 전에 사용자는 자산을 브리징해야 함\n\n**Push Chain:**\n- **Universal Execution**: 사용자는 브리징 없이 직접 상호 작용\n- **Native Assets**: 래핑된 토큰이 필요 없음, 원본 자산 사용\n- **Direct Verification**: 모든 체인에서 네이티브 서명 확인\n- **Single Transaction**: 사용자는 한 단계로 상호 작용하며 브리징이 필요 없음\n\nPush Chain은 자산 브리징의 필요성을 제거하는 반면 Wormhole은 크로스체인 상호 작용을 위해 이를 요구합니다.\n\n---",
                  "vs-axelar": "### Push Chain은 Axelar와 어떻게 다른가요?\n\n**Axelar:**\n- **네트워크의 네트워크**: Axelar 네트워크를 통해 체인을 연결합니다.\n- **Validator 의존성**: 보안을 위해 Axelar validator set에 의존합니다.\n- **Gateway Contracts**: 각 체인에 gateway 배포가 필요합니다.\n- **Message Passing**: 크로스체인 통신에 중점을 둡니다.\n\n**Push Chain:**\n- **Direct Execution**: 거래는 중간 단계를 거치지 않고 Push Chain에서 직접 처리됩니다.\n- **Independent Security**: 외부 의존성 없이 자체 합의를 갖습니다.\n- **Universal Contracts**: 단일 배포로 모든 체인에서 작동합니다.\n- **Native Execution**: 모든 체인에서 직접 거래 처리합니다.\n\nPush Chain은 직접적인 universal 접근을 제공하는 반면 Axelar는 중간 계층을 추가합니다.\n\n---",
                  "vs-chainlink-ccip": "### Push Chain은 Chainlink CCIP와 어떻게 다른가요?\n\n**Chainlink CCIP:**\n- **Oracle 네트워크**: Chainlink oracle 인프라 사용\n- **메시지 라우팅**: 다양한 체인 간 메시지를 라우팅\n- **외부 의존성**: Chainlink의 분산 네트워크에 의존\n- **통합 필요**: 앱은 크로스체인 기능을 위해 CCIP를 통합해야 함\n\n**Push Chain:**\n- **내장 프로토콜**: 크로스체인 기능은 블록체인에 기본적으로 내장\n- **직접 실행**: 외부 oracle 네트워크가 필요하지 않음\n- **자체 포함**: 모든 검증 및 실행은 Push Chain에서 발생\n- **자동 호환성**: 기존 컨트랙트를 배포하면 모든 사용자를 위해 즉시 작동\n\nPush Chain은 크로스체인 기능을 핵심 프로토콜에 내장하고 있으며, CCIP는 외부 서비스 레이어입니다.\n\n---",
                  "vs-particle-network": "### Push Chain이 Particle Network와 어떻게 다른가요?\n\n**Particle Network:**\n- **계정 추상화 집중**: 주로 지갑 추상화 및 소셜 로그인에 집중\n- **멀티 체인 지갑**: 체인 간 통일된 지갑 경험 제공\n- **SDK 통합**: 기능 구현을 위해 Particle SDK 통합 필요\n- **사용자 경험 레이어**: 기존 체인 위에 구축된 레이어로 작동\n\n**Push Chain:**\n- **유니버설 블록체인**: 모든 체인 사용자를 지원하는 네이티브 블록체인\n- **프로토콜 레벨 통합**: 합의에 내장된 크로스 체인 기능\n- **SDK 불필요**: 기존 지갑이 수정 없이 네이티브로 작동\n- **기반 레이어**: 사용자 경험 레이어가 아닌 기반 블록체인 인프라 제공\n\nPush Chain은 유니버설 블록체인이고 Particle Network는 지갑 추상화 서비스입니다.\n\n---",
                  "vs-agglayer": "### Push Chain은 AggLayer와 어떻게 다른가요?\n\n**AggLayer (Polygon):**\n- **Aggregation Layer**: Polygon 체인의 유동성과 상태를 집계합니다.\n- **Polygon Ecosystem**: Polygon CDK 체인에 특화되어 설계되었습니다.\n- **Shared Sequencing**: 연결된 체인에 통합된 시퀀싱을 제공합니다.\n- **Ecosystem Specific**: Polygon 체인 생태계로 제한됩니다.\n\n**Push Chain:**\n- **Universal Chain**: 어떤 블록체인에서도 작동하며, 생태계에 특화되지 않습니다.\n- **Native Execution**: 모든 체인에서 직접 트랜잭션 실행이 가능합니다.\n- **Chain Agnostic**: Ethereum, Solana, Bitcoin 및 모든 다른 체인을 지원합니다.\n- **One Deployment, Universal Apps**: Push Chain에 스마트 컨트랙트를 한 번 배포하면 모든 체인의 사용자가 액세스할 수 있게 되어 진정한 앱 수준 상호 운용성을 가능하게 합니다.\n\nPush Chain은 모든 블록체인에서 단일 배포로 universal application을 가능하게 하며, AggLayer는 Polygon 생태계 내 유동성 및 시퀀싱 집계에 중점을 둡니다.\n\n---",
                  "vs-cosmos": "### Push Chain은 Cosmos와 어떻게 다른가요?\n\n둘 다 크로스체인 기능을 지원하지만 접근 방식은 근본적으로 다릅니다:\n\n**Cosmos:**\n- **허브 앤 스포크 모델**: 체인은 IBC 프로토콜을 통해 연결됩니다.\n- **별도의 생태계**: 각 체인은 자체 상태와 사용자를 유지합니다.\n- **수동 브리징**: 사용자는 체인 간에 자산을 브리징해야 합니다.\n- **개발 복잡성**: 여러 체인에 배포해야 합니다.\n\n**Push Chain:**\n- **유니버설 체인**: 모든 사용자를 기본적으로 지원하는 단일 체인입니다.\n- **공유 상태 (shared state)**: 모든 체인에서 액세스할 수 있는 단일 통합 상태입니다.\n- **브리징 불필요**: 사용자는 원본 체인에서 직접 상호 작용합니다.\n- **단일 배포**: 모든 체인 사용자를 위한 단일 배포로 작동합니다.\n\nPush Chain은 수동 브리징 및 멀티체인 배포의 필요성을 제거하여 더 간단하고 통일된 UX를 제공합니다.\n\n---",
                  "vs-polkadot": "### Push Chain은 Polkadot과 어떻게 다른가요?\n\n**Polkadot:**\n- **파라체인 모델**: 연결된 체인에 대한 제한된 슬롯\n- **릴레이 체인 의존성**: 모든 파라체인은 릴레이 체인 보안에 의존\n- **Substrate 프레임워크**: 특정 개발 프레임워크 필요\n- **경매 시스템**: 값비싼 파라체인 슬롯 경매\n\n**Push Chain:**\n- **범용 지원**: 기존 체인를 기본적으로 지원\n- **독립적인 보안**: 자체 합의 및 validator set 보유\n- **EVM 호환**: 기존 Ethereum 도구 및 계약 사용\n- **경매 없음**: 경쟁 입찰 없이 직접 통합\n\nPush Chain은 기존 체인와 직접 통합되는 반면, Polkadot은 체인이 파라체인으로 재구축되어야 합니다.\n\n---",
                  "token-section": "## 토큰 관련",
                  "new-token": "### 푸시 체인과 관련된 새로운 토큰이 출시될 예정인가요?\n\n푸시 체인은 새로운 레이어 1으로서, 블록체인의 기능, 유지 관리 및 보안에 적합한 자체 토큰을 갖게 됩니다.\n\n자세한 내용은 [토큰 이코노미 심층 분석](/knowledge/tokenomics/) 👀을 참조하세요.\n\n---",
                  "developers-section": "## 개발자, 사용자 및 노드 운영자",
                  "early-adopter-incentives": "### **Push Chain**의 초기 참여자나 노드 운영자를 위한 인센티브가 있나요?\n\n노드 운영자는 mainnet 출시 후 스테이킹 보상을 획득할 수 있으며, **Push Points Program**에 참여하여 보상을 받도록 권장됩니다.\n\n초기 참여자는 **Push Points Program**에 참여하여 보상을 받도록 권장됩니다. [Push Portal](https://portal.push.org/) 방문으로 시작하세요.\n\n---",
                  "developer-user-benefits": "### Push Chain이 개발자와 사용자에게 제공하는 이점은 무엇인가요?\n\n**🧙 개발자를 위한 혜택**\n\n- **한 번 배포로 10배의 도달 범위 확장**  \nApp을 한 번만 배포하세요 — 코드 변경 없이 — 모든 지원 체인, 심지어 non-EVM 네트워크에서도 실행됩니다.\n\n- **감사 친화적, 100% EVM 호환**  \n추가 감사나 재작성 없이 기존 Solidity 계약을 활용하세요 — 예산을 인프라가 아닌 기능에 집중하세요.\n\n- **통일되고 마찰 없는 UX**  \n사용자는 하나의 트랜잭션만 서명하고, 모든 토큰으로 결제하고, 모든 지갑을 통해 상호 작용할 수 있습니다 — 앱이 어디에서나 작동합니다.\n\n- **번개처럼 빠른 DX**  \nSDK, 가상 에디터 및 React 플레이그라운드를 통해 빠르게 시작하세요 — 몇 분 안에 처음부터 라이브 상태로 전환할 수 있습니다.\n\n**🦹 사용자를 위한 혜택**\n\n- **원클릭 온보딩**  \n이메일, 소셜 또는 기존 지갑으로 로그인하세요 — 더 이상 시드 문구 또는 체인 이동이 필요하지 않습니다.\n\n- **원활한 상호 작용**  \ngas, 지갑 및 체인 복잡성은 숨겨져 있습니다 — 네트워크에 native인 것처럼 앱을 즐길 수 있습니다.\n\n- **우리는 빠릅니다**  \n트랜잭션이 1-2초 만에 완료되어 체인에 native인 것처럼 느껴집니다.\n\n---",
                  "how-to-build": "### 개발자들은 어떻게 Push Chain에서 빌드를 시작할 수 있나요?\n\n🚀 [Documentation Hub](/docs/)를 방문하여 필요한 모든 것을 얻으세요:\n\n- 🖥️ **Virtual Code Editors**: 브라우저에서 SDK 함수 호출을 실행하세요  \n- ⚛️ **React Playground**: 실시간으로 프론트엔드를 프로토타입하세요  \n- 📚 **End-to-End Examples**: 완전한 프로젝트 워크스루를 따라하세요  \n\n몇 분 안에 샘플 앱을 실행할 수 있습니다—로컬 설정은 필요하지 않습니다!\n\n---",
                  "dao-section": "## DAO 및 보조금",
                  "governance-changes": "### 새 토큰 출시 시 기존 거버넌스 시스템은 어떻게 변경될 예정인가요?\n\nPush DAO 거버넌스 시스템은 Push Chain 출시와 함께 발전하고 확장될 예정입니다. Push가 원래보다 더 포괄적으로 변화함에 따라 예상되는 과정입니다.\n\n위임, 대사 프로그램, subDAO 및 기타 DAO 이니셔티브는 유니버설 애플리케이션의 허브로서의 지위를 달성하는 주요 목표를 반영하여 업그레이드될 것입니다.\n\n---",
                  "doubts-section": "## 의문점",
                  "push-services-future": "### 푸시 알림 및 푸시 채팅은 어떻게 되나요?\n\nPush Chain은 Push Protocol의 비전의 자연스러운 발전입니다. 현재 Push Protocol의 서비스는 여전히 우선 순위이며 새로운 인프라의 이점을 누리면서 계속 개선될 것입니다.\n\n오늘날의 푸시 알림 및 채팅 프로토콜은 Push Chain을 기반으로 구축됨으로써 크게 이점을 얻을 것입니다. 전담 팀이 이러한 프로토콜의 유지 관리 및 개선에 집중하여 해당 분야에서 사실상의 표준으로 유지되도록 할 것입니다.\n\nPush Chain과 연계함으로써 프로토콜을 통해 전송된 알림 및 채팅은 체인에서 트랜잭션으로 처리됩니다. 이러한 통합은 이러한 프로토콜이 가치를 축적할 수 있을 뿐만 아니라 web3 생태계 내에서 유용성과 영향력을 더욱 향상시키는 새로운 장의 시작을 알립니다.\n\n---",
                  "project-distraction": "### 이 프로젝트가 현재 서비스 개선으로부터 주의를 분산시키나요?\n\n아니요, ☝️ [위](#what-happens-to-push-notification-and-push-chat) 내용을 참고해주세요.\n\n---",
                  "core-focus-shift": "### 푸쉬 체인이 푸쉬 프로토콜의 핵심 기능인 알림 및 채팅에서 벗어나는 것인가요?\n\n아니요. 푸쉬 체인은 푸쉬 프로토콜의 확립된 기반 위에 구축됩니다. 푸쉬 체인은 푸쉬 프로토콜의 **다음 진화**를 나타내며, 벗어나는 것이 아닙니다.\n\n---",
                  "partnerships-effect": "### Push Chain 출시가 기존 파트너십 및 통합에 어떤 영향을 미칠까요?\n\nPush Chain은 크로스체인 지원, 더 빠른 finality, 확장 가능한 솔루션과 같은 추가 기능을 제공하여 기존 파트너십을 보완합니다. 유니버설 앱 구축 및 확장을 가능하게 함으로써 파트너십을 강화합니다.\n\n---",
                  "decentralization-scaling": "### Push Chain은 어떻게 확장하면서 분산화를 유지할 건가요?\n\n저희 Devnet에서는 동적 샤딩과 병렬 실행을 통해 어떻게 확장할 수 있는지 보여드렸습니다. 이를 통해 분산화를 손상시키지 않고 처리량을 높입니다.\n\n테스트넷에서는 [CometBFT](https://github.com/cometbft/cometbft), 검증된 비잔틴 장애 허용 엔진에서 체인이 실행되도록 전체 스택 상호 운용성에 중점을 두었습니다. 이 네트워크는 1초 미만의 finality를 달성했으며 [분당 최대 20,000건의 transaction](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md)을 처리할 수 있습니다.\n\n이 개념 증명은 시작에 불과합니다. 나중에 더 많은 확장 최적화를 롤아웃함에 따라 Push Chain이 universal 애플리케이션의 요구 사항을 안전하게 충족할 수 있다고 확신합니다.",
                  "centralization-risks": "### Push Chain의 중앙화 위험은 있나요?\n\n**아니요.** Push Chain의 아키텍처는 탈중앙화를 강조합니다.\n\nPush Chain은 완전한 탈중앙화를 구현하고 있으며 견고하고 복원력이 있도록 설계되었습니다. 누구나 노드를 운영하고 네트워크에 참여할 수 있으며, PoS를 통해 인센티브를 받거나 처벌을 받습니다. 요약하자면:\n\n- 검증인 및 기타 참여자는 독립적으로 운영되며 PoS를 통해 인센티브를 받습니다.\n- 거버넌스 메커니즘은 커뮤니티 참여를 보장합니다.\n- 모든 생태계 참여자는 어느 정도 거버넌스에 참여합니다.\n\n노드 운영에 대해 자세히 알아보려면 [Knowledge Base](/knowledge/)를 참조하거나 [Validator Node Repo](https://github.com/pushchain/push-chain-node)를 확인하세요.\n\n---",
                  "support-section": "## 지원 및 참여",
                  "need-help": "### 도움이 필요합니다. Push Chain에 어떻게 연락할 수 있나요?\n\n지원 문의는 [여기에서 티켓을 제출](https://push.org/support)하거나 support@push.org로 문의하실 수 있습니다.\n\n개발자라면 [Discord](https://discord.com/invite/pushchain)를 통해 문의해주시면 기꺼이 도와드리겠습니다.\n\n---",
                  "how-to-contribute": "### 좋습니다. 어떻게 기여할 수 있나요?\n\nPush Chain의 진행 상황을 가장 잘 파악하는 방법은 공식 Push 채널을 통해 하는 것입니다: 웹사이트, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject), 그리고 [Discord](https://discord.com/invite/pushchain).\n\n항상 피싱 시도, 가짜 사이트 또는 암호화폐를 요구하는 사기에 주의하십시오. 모든 공식적인 소통은 공식 Push 계정에서 이루어질 것입니다.\n\n---"
                }
              }
            }
          }
        }
      }
    }
  }
}