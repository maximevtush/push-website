{
  "seo": {
    "title": "Preguntas frecuentes ‚Äî Preguntas frecuentes seleccionadas",
    "description": "Respuestas r√°pidas sobre wallets, comisiones, cadenas soportadas y c√≥mo empezar.",
    "og-title": "Preguntas frecuentes de Push Chain - Todas las preguntas",
    "og-description": "Encuentra respuestas r√°pidas con enlaces a gu√≠as, testnet y soporte.",
    "twitter-title": "Preguntas frecuentes - Empieza aqu√≠",
    "twitter-description": "Respuestas r√°pidas a las preguntas de Push Chain."
  },
  "breadcrumbs": {
    "knowledge-base": "Base de conocimientos"
  },
  "title": "Preguntas Frecuentes",
  "overview": "## Resumen\n\nEl lugar ideal para encontrar respuestas a las preguntas m√°s comunes de la comunidad sobre Push Chain. Informaci√≥n recopilada de la comunidad Push Fam ü´∂ y seleccionada por el equipo de Push üí™.\n\n---",
  "what-is-push-chain": "### ¬øQu√© es Push Chain?\n\nPush Chain es una blockchain de Capa 1 de estado compartido construida para eliminar la fragmentaci√≥n entre todas las cadenas.\n\nAl habilitar **transacciones fluidas desde cualquier cadena** (Ethereum, Solana, EVM o non-EVM), permite a cualquier usuario interactuar con aplicaciones web3 sin tener que manejar m√∫ltiples wallets, tokens o mec√°nicas de gas.\n\nEn resumen, Push Chain une L1s ü§ù L2s ü§ù L3s bajo una capa cohesiva.\n\n---",
  "how-does-push-chain-work": "### ¬øC√≥mo funciona Push Chain?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain adopta un enfoque √∫nico para resolver el problema de la fragmentaci√≥n entre todas las cadenas. En lugar de depender de protocolos de interoperabilidad, que a√±aden complejidad tanto para los usuarios como para los desarrolladores, adopta un enfoque novedoso construyendo una verdadera blockchain universal que puede ser utilizada nativamente por cualquier usuario desde cualquier cadena.\n\nPara lograr esto, Push Chain aprovecha varios **precompiles** que son m√≥dulos personalizados creados para:\n\n1. **Reconocer** usuarios de otras cadenas - Est√°ndar de direcci√≥n universal que extiende la direcci√≥n de un usuario para que sea agn√≥stica a la blockchain (basado en [est√°ndares CAIP-10](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Mapear** usuarios a Push Chain - Se despliega una Cuenta Ejecutora Universal (UEA) para cada usuario de cadena externa. Este m√≥dulo se utiliza para desplegar una cuenta inteligente que luego utiliza otros precompiles para procesar las transacciones.\n\n3. **Ejecutar** transacciones universales - Esto se hace utilizando precompiles USV (Universal Signature Verification) y UTXV (Universal Transaction Verifier) para verificar y ejecutar firmas y transacciones de otras cadenas.\n\n4. **Abstraer** las complejidades de la cadena en la que se encuentran - Esto se hace teniendo contratos de gateway universales en cada cadena que bloquea fondos de gas en el token nativo de la cadena (o cualquier otro token compatible) y luego utiliza los precompiles UTXV para atribuir el gas a la UEA (Cuenta Ejecutora) y USV para ejecutar la transacci√≥n.\n\nEste es un **enfoque extremadamente poderoso** que permite a los usuarios interactuar con cualquier app en Push Chain sin preocuparse por la cadena en la que se encuentran o qu√© wallet est√°n utilizando, ya que todo est√° abstra√≠do, tanto para los usuarios como para los desarrolladores.\n\n---",
  "why-unique-for-users": "### ¬øPor qu√© es Push Chain √∫nico para los usuarios?\n\nPush Chain aborda deficiencias espec√≠ficas en las blockchains existentes, como la interoperabilidad, el acceso al estado entre cadenas, los solucionadores programables y la abstracci√≥n de la wallet, lo que da como resultado una **verdadera interoperabilidad de pila completa**. Si bien las blockchains existentes son s√≥lidas, operan en su propio ecosistema y se necesita un agregador para unirlas.\n\nEl enfoque de Push Chain es ser una **cadena de estado compartido** para aplicaciones universales (interoperables) que act√∫e como una capa unificadora donde todas las cadenas puedan unirse y utilizar Push Chain como un centro universal o realizar la liquidaci√≥n entre ellas.\n\nOfrece un nuevo paradigma de web3 que funciona desde **Cualquier Cadena**. Para **Cualquier Wallet / Usuario**. Y es adecuado para **Cualquier App**.\n\n---",
  "core-innovations": "### ¬øQu√© hace que Push Chain sea innovadora?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain es una capa 1 Proof-of-Stake dise√±ada para eliminar la fragmentaci√≥n en cada blockchain.  Bajo el cap√≥, combina varias innovaciones clave:\n\n- **Cadena Universal Verdadera**  \n  Admite nativamente todas las cadenas y permite a los usuarios interactuar con la misma app. No se necesitan relayers, puentes u otras soluciones ad-hoc.\n\n- **Abstracci√≥n Universal de Tarifas y Wallet**  \n  Permite a los usuarios interactuar con la app desde cualquier cadena sin preocuparse por las tarifas o la mec√°nica del wallet.\n\n- **Una sola transacci√≥n para cualquier cadena**  \n  Los usuarios solo firman una transacci√≥n, independientemente de la cadena en la que se encuentren.\n\n- **Smart Contracts Universales**  \n  Smart Contracts 100% compatibles con EVM que se pueden implementar con **cero cambios de c√≥digo en la cadena**. Una vez implementados, se vuelven instant√°neamente compatibles con los usuarios de todas las cadenas.\n\n- **EVM Universal**  \n  Push Chain es lo suficientemente inteligente como para reconocer nativamente a los usuarios de otras cadenas y atribuirles y mapearles correctamente las transacciones.\n\n- **Estado Compartido y Solucionadores Programables**  \n  (Roadmap) Permite que los smart contracts de Push Chain lean y escriban el estado en cualquier otra cadena.\n\nJuntos, estas caracter√≠sticas te permiten construir **apps web3 universales**. En lugar de \"Uniswap en Ethereum\" o \"Uniswap en Polygon\", un usuario simplemente se convierte en **usuario de Uniswap** ‚Äî punto.",
  "problems-solved": "### ¬øQu√© problemas resuelve Push Chain?\n\n- **Fragmentaci√≥n**\n  Une cadenas EVM y no EVM bajo una capa L1 de shared-state com√∫n, para que los usuarios nunca tengan que cambiar de red o billeteras.\n\n- **Interoperabilidad**\n  Soporte nativo para transacciones desde cualquier blockchain y shared state on-chain.\n\n- **Finality**\n  Finalidad nativa instant√°nea e irreversible en ~1-2 segundos ‚Äì no m√°s esperas o reorgs.\n\n- **Incorporaci√≥n y UX**\n  Inicio de sesi√≥n social/correo electr√≥nico, gas-in-any-token y soporte para cualquier billetera para un acceso sin fricci√≥n entre cadenas.\n\n- **Aplicaciones universales**\n  Crea una vez, despliega en todas partes ‚Äì cualquier app web3 funciona a la perfecci√≥n para cualquier usuario en cualquier cadena.\n\n---",
  "what-apps-can-build": "### ¬øQu√© apps puedes construir en Push Chain?\n\n![Universal App Examples](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nCon la shared-state y la arquitectura cross-chain de Push Chain, las posibilidades son infinitas. Aqu√≠ hay solo algunos ejemplos estrella:\n\n- **Universal DEX**  \n  Una interfaz de intercambio √∫nica para cada pool de liquidez: enrutamiento abstracto en todas las cadenas con la velocidad y la experiencia de usuario de un CEX.\n\n- **Universal DeFi**  \n  Un banco global en tu navegador: pr√©stamos, cr√©ditos, agregadores de yield que abarcan ecosistemas sin bridging manual.\n\n- **Universal AI Agents**  \n  Agentes aut√≥nomos que pagan y se les paga en cualquier token en cualquier cadena: perfectos para servicios de suscripci√≥n, bots de datos y m√°s.\n\n- **Universal DAOs**  \n  Gobernanza cross-chain donde los poseedores de tokens votan y ejecutan propuestas independientemente de su cadena de origen.\n\n- **Universal Gaming**  \n  Torneos multijugador y econom√≠as dentro del juego que unen a jugadores y activos de Ethereum, Solana, Polygon y m√°s all√°.\n\n- **Universal Marketplace**  \n  Compra, vende e intercambia NFTs y tokens de cada cadena en un marketplace consolidado.\n\n- **Universal Name Service**  \n  Nombres legibles por humanos que se resuelven a wallets en m√∫ltiples blockchains.\n\n¬°Las apps e innovaciones que pueden ocurrir en Push Chain son infinitas! Aqu√≠ hay algunos [m√°s casos de uso](/blog/consumer-apps-that-can-be-built-on-push-chain/) para empezar. Los builders tambi√©n pueden consultar el [Documentation Hub](/docs/) para empezar.\n\n---",
  "technical-section": "## Technical",
  "why-not-an-l2": "### ¬øPor qu√© L1 y no una L2?\n\nPush Chain est√° construido para servir como una **capa de liquidaci√≥n compartida** y **capa de ejecuci√≥n universal** para todas las dem√°s blockchains‚Äîroles que solo una L1 independiente puede cumplir:\n\n- **Liquidaci√≥n Multi-Cadena Nativa**  \n  Como una L1, Push Chain puede finalizar directamente las transacciones de cualquier cadena sin depender de modelos de seguridad externos o pruebas de fraude.\n\n- **Ejecuci√≥n y Acceso al Estado Universal**  \n  Ejecutar su propio consenso y m√°quina de estado permite a Push Chain interpretar y ejecutar transacciones de Ethereum, Solana y m√°s all√° ‚Äîalgo que una L2 ‚Äîligada a una capa base‚Äî no puede hacer de forma nativa.\n\n- **Sin Restricciones ni Retrasos de L2**  \n  Las L2 heredan la latencia, las reglas de finalizaci√≥n y el modelo de gas de su cadena anfitriona (m√°s la sobrecarga del puente). Push Chain evita estos cuellos de botella ofreciendo finalizaci√≥n instant√°nea y abstracci√≥n universal de tarifas a nivel de la capa base.\n\n- **Estado Compartido Real**  \n  Para leer y escribir el estado de m√∫ltiples cadenas dentro de los contratos inteligentes, necesitas acceso directo a nivel de protocolo‚Äîsolo disponible a nivel de la L1.\n\nEn resumen, solo una L1 construida con un prop√≥sito espec√≠fico puede unificar cada cadena bajo una capa cohesiva de ejecuci√≥n y liquidaci√≥n ‚Äîsin complejidad adicional ni suposiciones de confianza a√±adidas.\n\n---",
  "evm-compatibility": "### ¬øEs Push Chain compatible con EVM?\n\nS√≠, Push Chain es **compatible con EVM** y mucho m√°s. Soporta:\n\n- **Smart Contracts EVM**: Implementa contratos Solidity como en Ethereum\n- **Herramientas de Ethereum**: Usa MetaMask, Hardhat, Remix y otras herramientas familiares\n- **Extensiones universales**: Precompilaciones adicionales para funcionalidad cross-chain\n- **Soporte Multi-VM**: (Roadmap) Soporte para otras VMs como SVM (Solana), MoveVM, etc.\n\nEsto significa que los desarrolladores pueden:\n- Migrar dApps de Ethereum existentes con cambios m√≠nimos\n- Usar flujos de trabajo y herramientas de desarrollo familiares\n- Acceder a capacidades cross-chain mejoradas a trav√©s de las caracter√≠sticas universales de Push Chain\n\nEn la pr√°ctica, los usuarios y las apps de cualquier cadena pueden interactuar con las apps de Push Chain sin problemas, independientemente de la VM subyacente.\n\n---",
  "evm-non-evm-compatible": "### ¬øSer√° Push Chain compatible con cadenas EVM y no EVM?\n\n¬°S√≠! Push Chain est√° dise√±ado para conectar todos los paradigmas de blockchain.\n\n- **Compatibilidad EVM**  \n  Implementa tus contratos Solidity y se ejecutar√°n sin cambios, aprovechando el entorno de ejecuci√≥n EVM de Push Chain.\n\n- **Soporte No-EVM**  \n  Precompilados nativos (USV/UTXV) y el est√°ndar de direcci√≥n universal permiten que Push Chain valide y ejecute transacciones desde Solana, Bitcoin, cadenas Cosmos SDK y m√°s.\n\nEn la pr√°ctica, los usuarios y las apps de cualquier cadena pueden interactuar con las apps de Push Chain sin problemas, independientemente de la VM subyacente.\n\n---",
  "why-not-ethereum-or-solana": "### ¬øPor qu√© crear una nueva blockchain cuando ya existen otras como Ethereum y Solana?\n\nLas blockchains existentes sobresalen en sus dominios espec√≠ficos, pero crean **fragmentaci√≥n**:\n\n- **Ethereum**: Genial para DeFi pero caro y lento\n- **Solana**: R√°pido y barato, pero con diferentes herramientas y ecosistema\n- **L2s**: Solucionan el escalado pero crean m√°s fragmentaci√≥n\n\nPush Chain no compite con estas cadenas ‚Äî las **unifica**:\n\n- Los usuarios pueden interactuar con las apps de Push Chain usando sus wallets existentes (MetaMask, Phantom, etc.)\n- Pagar gas en sus tokens preferidos (ETH, SOL, USDC)\n- Los desarrolladores construyen una vez en lugar de desplegar en m√∫ltiples cadenas\n- La liquidez y los usuarios de todas las cadenas pueden interactuar en las mismas apps\n\nPush Chain es la **pieza que faltaba** que hace que todas las cadenas existentes funcionen juntas sin problemas.\n\n---",
  "shared-state-meaning": "### ¬øQu√© significa blockchain de estado compartido?\n\nEl estado compartido se refiere al estado presente de los datos onchain. Un blockchain de estado compartido es aquel que tiene acceso de lectura y escritura a su propio estado y al estado de todas las dem√°s cadenas con las que interact√∫a.\n\nA shared-state blockchain es capaz de manejar datos, liquidez y usuarios de cualquier otra cadena.\n\n---",
  "how-achieve-shared-state": "### ¬øC√≥mo logra Push Chain un estado compartido?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA traditional blockchain solo conoce su propio libro mayor y est√°ndar de wallet. Push Chain extiende ese modelo en cuatro formas clave:\n\n1. **Compatibilidad Universal de Wallets**  \n\t- Soporta direcciones independientes de la cadena de cualquier cadena (Ethereum, Solana, Bitcoin, Cosmos SDK, etc.).  \n\t- Las firmas de cualquier cadena se verifican a trav√©s de precompilados USV/UTXV, para que los usuarios nunca cambien de wallet.\n\n2. **Smart Contracts Universales**  \n\t- Los contratos EVM se implementan sin cambios pero pueden verificar y ejecutar de forma nativa transacciones entre cadenas.  \n\t- El entorno de ejecuci√≥n de Push Chain maneja el mapeo de firmas y el an√°lisis de carga para cada red compatible.\n\n3. **Estado Compartido On-Chain**  \n\t- Los validadores comprometen pruebas Merkle del estado externo de la cadena (a trav√©s de ra√≠ces MPT) cada bloque.  \n\t- Los relays buscan y env√≠an pruebas de hoja bajo demanda, para que los contratos puedan leer los datos de cualquier cadena en tiempo real.\n\n4. **Solvers Programables**  \n\t- Una red de solvers ejecuta flujos de trabajo entre cadenas at√≥micos (por ejemplo, intercambio en la Cadena A, acu√±aci√≥n en la Cadena B) bajo una sola transacci√≥n.  \n\t- Los desarrolladores escriben scripts de solver simples; la red maneja el enrutamiento y la ejecuci√≥n.\n\nEn conjunto, estas caracter√≠sticas convierten a Push Chain en un **L1 de estado compartido** que permite que las aplicaciones universales sean nativas de todas las cadenas. Un mundo donde cualquier usuario de cualquier cadena pueda acceder e interactuar con cualquier aplicaci√≥n en cualquier otra cadena.\n\n**Cualquier Cadena, Cualquier Aplicaci√≥n, Cualquier Usuario - Una Push Chain**\n\n---",
  "consensus-mechanism": "### ¬øQu√© mecanismo de consenso utiliza Push Chain?\n\nPush Chain utiliza el consenso **Proof-of-Stake (PoS)**, construido sobre el motor **CometBFT**, con varias mejoras:\n\n- **Finalidad R√°pida**: Las transacciones se finalizan en aproximadamente 1-2 segundos, con finalidad determinista (sin reorgs)\n- **Eficiencia Energ√©tica**: PoS es ambientalmente sostenible en comparaci√≥n con PoW\n- **Red de Validadores**: Red descentralizada de validadores que protegen la cadena\n- **Protecci√≥n contra Slashing**: Los incentivos econ√≥micos aseguran la honestidad del validador\n\nEl consenso BFT probado en batalla de CometBFT est√° optimizado aqu√≠ para los requisitos √∫nicos del procesamiento universal de transacciones y la gesti√≥n del estado cross-chain.\n\n---",
  "transaction-fees": "### ¬øC√≥mo funcionan las tarifas de transacci√≥n en Push Chain?\n\nPush Chain revoluciona el pago de tarifas con **Universal Fee Abstraction**:\n\n- **Paga con Cualquier Token**: Los usuarios pueden pagar gas en ETH, SOL, USDC o cualquier token soportado\n- **Pago de Tarifas entre Cadenas**: Paga las tarifas desde tu cadena de origen sin necesidad de un puente\n- **Transacciones Sin Gas**: Las aplicaciones pueden patrocinar las transacciones de los usuarios para una experiencia de usuario perfecta\n- **Mercado de Tarifas Din√°mico**: Las tarifas se ajustan seg√∫n la demanda de la red\n\nEsto significa que los usuarios nunca necesitan adquirir tokens nativos de Push Chain solo para interactuar con las aplicaciones.\n\n---",
  "true-universal-chain": "### ¬øQu√© significa Cadena Universal Verdadera?\n\nUna **cadena universal verdadera** es una blockchain que trata a todas las dem√°s redes como ciudadanos de primera clase: sin puentes, sin retransmisores centralizados y sin trucos de compatibilidad. Ofrece:\n\n1. **Identidad Multichain Nativa**\n\tWallets de Ethereum, Solana, cualquier cadena EVM o no EVM, todas firman, verifican y ejecutan de forma nativa en Push Chain. As√≠, los usuarios nunca cambian de cuenta ni se ven molestados por la complejidad de m√∫ltiples wallets.\n\n2. **Liquidaci√≥n Unificada**\n\tLas transacciones de cualquier red se finalizan en Push Chain, brindando a todos una √∫nica fuente de verdad y permitiendo que la misma app sea accesible para usuarios de todas las cadenas.\n\n3. **Una Sola Transacci√≥n y Abstracci√≥n Universal de Tarifas**\n\tLos usuarios firman solo una transacci√≥n, independientemente de su cadena de origen, y pagan gas en cualquier token. No m√°s mantenimiento o intercambio de innumerables tokens para usar una app.\n\n4. **Desplegar Una Vez, Usar en Todas Partes**\n\tLos desarrolladores escriben y despliegan smart contracts una vez (EVM o de otro modo) con **cero** c√≥digo adicional: un solo despliegue cubre todas las cadenas.\n\nPush Chain es la primera en integrar estas funciones directamente en su consenso y tiempo de ejecuci√≥n, eliminando verdaderamente la fragmentaci√≥n: sin soluciones alternativas, sin capas adicionales, solo una cadena universal para todos.\n\n---",
  "competitors-section": "## Competidores",
  "vs-other-universal": "### ¬øQu√© diferencia a Push Chain de otras Soluciones Universales?\n\nLas soluciones \"universales\" de hoy en d√≠a todav√≠a dependen de puentes, requieren transacciones dobles o retransmisores centralizados para mover datos y valor. Push Chain es diferente: es la primera L1 verdaderamente universal que:\n\n- **Unifica a los usuarios entre cadenas**  \n\tCada direcci√≥n de blockchain es compatible de forma nativa. Wallets como MetaMask, Phantom, etc., son todas compatibles con Push Chain. El gas se paga en cualquier token en cualquier cadena.\n\n- **Act√∫a como una capa de ejecuci√≥n universal**  \n\tTodas las transacciones se finalizan en la misma cadena, asegurando que todos interact√∫en con la misma app: sin trucos, sin soluciones alternativas.\n\n- **Atribuye y ejecuta correctamente las transacciones de cualquier cadena**  \n\tLas transacciones se firman, verifican y atribuyen a wallets en sus cadenas de origen. Una verdadera cadena universal las soporta a todas.\n\n---",
  "vs-bridges-messaging": "### ¬øC√≥mo se diferencia esto de los puentes o las capas de mensajer√≠a?\n\n**Respuesta corta**: Push es donde se ejecuta tu app. Los puentes/las capas de mensajer√≠a solo mueven <token> o mensajes entre cadenas, lo que complica todo para los usuarios y los desarrolladores.\n\n- **Un hogar √∫nico vs muchos clones**\n\tCon puentes/capas de mensajer√≠a, implementas por cadena y sincronizas mediante mensajes. En Push, implementas una vez; todos acceden al mismo contrato y <shared-state>.\n\n- **Sin <token> envueltos ni puentes obligatorios**\n\tLos usuarios permanecen en su cadena de origen y pagan con lo que ya tienen; nosotros gestionamos el enrutamiento y la conversi√≥n de tarifas de forma interna.\n\n- **Identidad y verificaci√≥n unificadas**\n\tAceptamos firmas de cualquier <wallet>/cadena y las atribuimos al mismo usuario en Push ‚Äî no custodial.\n\n- **Menos piezas m√≥viles**\n\tNo hay bailes de aprobaci√≥n entre cadenas, no hay b√∫squeda de <token> de <gas>, no hay contratos de pegamento que mantener sincronizados.\n\n- **Usa puentes cuando quieras, no porque tengas que hacerlo**\n\tLa <liquidity> a√∫n puede moverse a trav√©s de puentes, pero interactuar con tu app no lo requiere.\n\n**Resultado**: apps m√°s simples, una √∫nica fuente de verdad y una UX que se siente como una √∫nica cadena, incluso cuando los usuarios no lo est√©n.\n\n---",
  "vs-layerzero": "### ¬øC√≥mo se diferencia Push Chain de LayerZero?\n\n**LayerZero:**\n- **Messaging Protocol**: Habilita el paso de mensajes entre cadenas de bloques\n- **Relayer Dependency**: Depende de relayers y or√°culos externos\n- **Developer Integration**: Las apps deben integrar el SDK de LayerZero\n- **Trust Assumptions**: Los usuarios deben confiar en la infraestructura del relayer\n\n**Push Chain:**\n- **Native Execution**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **No Relayers**: Funcionalidad cross-chain integrada en el protocolo\n- **Zero Integration**: Las apps existentes funcionan sin modificaciones\n- **Trust-Minimized**: No se asumen confianzas adicionales m√°s all√° del consenso propio de Push Chain\n\nPush Chain proporciona ejecuci√≥n cross-chain nativa mientras que LayerZero requiere infraestructura e integraci√≥n adicionales.\n\n---",
  "vs-wormhole": "### ¬øC√≥mo se diferencia Push Chain de Wormhole?\n\n**Wormhole:**\n- **Bridge Protocol**: Se centra principalmente en el puenteo de <token> y <NFT>\n- **Wrapped Assets**: Crea versiones envueltas de <token> en diferentes cadenas\n- **Guardian Network**: Depende de un validator set para verificar mensajes entre cadenas\n- **Multi-Step Process**: Los usuarios deben puentear activos antes de usar las <app>\n\n**Push Chain:**\n- **Universal Execution**: Los usuarios interact√∫an directamente sin necesidad de puenteo\n- **Native Assets**: No se necesitan <token> envueltos, usa los activos originales\n- **Direct Verification**: Verificaci√≥n nativa de firmas desde cualquier cadena\n- **Single Transaction**: Los usuarios interact√∫an en un solo paso, sin necesidad de puenteo\n\nPush Chain elimina la necesidad de puenteo de activos, mientras que Wormhole lo requiere para las interacciones entre cadenas.\n\n---",
  "vs-axelar": "### ¬øC√≥mo se diferencia Push Chain de Axelar?\n\n**Axelar:**\n- **Red de Redes**: Conecta cadenas a trav√©s de la red Axelar\n- **Dependencia de Validadores**: Depende del conjunto de validadores de Axelar para la seguridad\n- **Contratos Gateway**: Requiere despliegues de gateway en cada cadena\n- **Paso de Mensajes**: Se enfoca en la comunicaci√≥n cross-chain\n\n**Push Chain:**\n- **Ejecuci√≥n Directa**: Las transacciones se procesan nativamente en Push Chain sin intermediarios\n- **Seguridad Independiente**: Propio consenso sin dependencias externas\n- **Contratos Universales**: Un √∫nico despliegue funciona para todas las cadenas\n- **Ejecuci√≥n Nativa**: Procesamiento directo de transacciones desde cualquier cadena\n\nPush Chain proporciona acceso universal directo mientras que Axelar a√±ade una capa intermedia.\n\n---",
  "vs-chainlink-ccip": "### ¬øC√≥mo se diferencia Push Chain de Chainlink CCIP?\n\n**Chainlink CCIP:**\n- **Red de Or√°culos**: Utiliza la infraestructura de or√°culos de Chainlink\n- **Enrutamiento de Mensajes**: Enruta mensajes entre diferentes cadenas\n- **Dependencia Externa**: Depende de la red descentralizada de Chainlink\n- **Integraci√≥n Requerida**: Las apps deben integrar CCIP para las funciones cross-chain\n\n**Push Chain:**\n- **protocolo Integrado**: La funcionalidad cross-chain es nativa de la blockchain\n- **Ejecuci√≥n Directa**: No se necesita una red de or√°culos externa\n- **Autocontenida**: Toda la verificaci√≥n y ejecuci√≥n ocurre en Push Chain\n- **Compatibilidad Autom√°tica**: Implementa contratos existentes ‚Äî funcionan de inmediato para todos los usuarios\n\nPush Chain tiene capacidades cross-chain integradas en su protocolo principal mientras que CCIP es una capa de servicio externa.\n\n---",
  "vs-particle-network": "### ¬øC√≥mo se diferencia Push Chain de Particle Network?\n\n**Particle Network:**\n- **Enfoque en la Abstracci√≥n de Cuentas**: Se centra principalmente en la abstracci√≥n de wallets y el inicio de sesi√≥n social\n- **Wallets Multi-Chain**: Crea una experiencia de wallet unificada entre cadenas\n- **Integraci√≥n del SDK**: Requiere la integraci√≥n del SDK de Particle para su funcionalidad\n- **Capa de Experiencia de Usuario**: Opera como una capa sobre las cadenas existentes\n\n**Push Chain:**\n- **Blockchain Universal**: Blockchain nativa que soporta a todos los usuarios de las cadenas\n- **Integraci√≥n a Nivel de Protocolo**: Funcionalidad cross-chain integrada en el consenso\n- **No se Requiere SDK**: Los wallets existentes funcionan de forma nativa sin modificaci√≥n\n- **Capa Base**: Proporciona la infraestructura blockchain subyacente, no solo una capa de UX\n\nPush Chain es una blockchain universal mientras que Particle Network es un servicio de abstracci√≥n de wallets.\n\n---",
  "vs-agglayer": "### ¬øC√≥mo se diferencia Push Chain de AggLayer?\n\n**AggLayer (Polygon):**\n- **Capa de Agregaci√≥n**: Agrega liquidez y estado a trav√©s de las cadenas de Polygon\n- **Ecosistema Polygon**: Dise√±ado espec√≠ficamente para las cadenas CDK de Polygon\n- **Secuenciaci√≥n Compartida**: Proporciona una secuenciaci√≥n unificada para cadenas conectadas\n- **Espec√≠fico del Ecosistema**: Limitado al ecosistema de cadenas de Polygon\n\n**Push Chain:**\n- **Cadena Universal**: Funciona con cualquier blockchain, no espec√≠fico del ecosistema\n- **Ejecuci√≥n Nativa**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **Agn√≥stico a la Cadena**: Soporta Ethereum, Solana, Bitcoin y todos los dem√°s\n- **Una Implementaci√≥n, Apps Universales**: Implementa un smart contract una vez en Push Chain, y se vuelve accesible para los usuarios desde cualquier cadena ‚Äî habilitando una verdadera interoperabilidad a nivel de app\n\nPush Chain habilita aplicaciones universales con una sola implementaci√≥n en todas las blockchains, mientras que AggLayer se enfoca en la agregaci√≥n de liquidez y secuenciaci√≥n dentro del ecosistema Polygon.\n\n---",
  "vs-cosmos": "### ¬øC√≥mo se diferencia Push Chain de Cosmos?\n\nAunque ambos habilitan la funcionalidad cross-chain, los enfoques son fundamentalmente diferentes:\n\n**Cosmos:**\n- **Modelo Hub-and-Spoke**: Las cadenas se conectan a trav√©s del protocolo IBC\n- **Ecosistemas Separados**: Cada cadena mantiene su propio estado y usuarios\n- **Bridging Manual**: Los usuarios deben realizar bridging de activos entre cadenas\n- **Complejidad para Desarrolladores**: Necesitan desplegar en m√∫ltiples cadenas\n\n**Push Chain:**\n- **Cadena Universal**: Una sola cadena que soporta nativamente a todos los usuarios\n- **Shared State**: Un estado unificado accesible desde cualquier cadena\n- **No Bridging**: Los usuarios interact√∫an directamente desde su cadena de origen\n- **Deploy Once**: Un solo despliegue funciona para todos los usuarios de la cadena\n\nPush Chain elimina la necesidad de bridging manual y despliegues multi-cadena, ofreciendo una UX m√°s simple y unificada.\n\n---",
  "vs-polkadot": "### ¬øC√≥mo se diferencia Push Chain de Polkadot?\n\n**Polkadot:**\n- **Modelo de Parachains**: Slots limitados para cadenas conectadas\n- **Dependencia de la Relay Chain**: Todas las parachains dependen de la seguridad de la relay chain\n- **Framework Substrate**: Requiere un framework de desarrollo espec√≠fico\n- **Sistema de Subastas**: Subastas de slots de parachains costosas\n\n**Push Chain:**\n- **Soporte Universal**: Soporta de forma nativa cualquier cadena existente\n- **Seguridad Independiente**: Propio consenso y validator set\n- **Compatible con EVM**: Utiliza herramientas y contratos de Ethereum existentes\n- **Sin Subastas**: Integraci√≥n directa sin licitaci√≥n competitiva\n\nPush Chain se integra directamente con las cadenas existentes, mientras que Polkadot requiere que las cadenas se reconstruyan como parachains.\n\n---",
  "token-section": "## Token Relacionado",
  "new-token": "### ¬øHabr√° un nuevo token asociado a Push Chain?\n\nComo una nueva capa 1, Push Chain tendr√≠a su propio token nativo con tokenomics adecuados para el funcionamiento, mantenimiento y seguridad de una blockchain.\n\nPara obtener todos los detalles, consulta nuestro [An√°lisis profundo de Tokenomics](/knowledge/tokenomics/) üëÄ.\n\n---",
  "developers-section": "## Desarrolladores, Usuarios y Operadores de <1>node</1>",
  "early-adopter-incentives": "### ¬øExisten incentivos para los primeros usuarios u operadores de nodos en Push Chain?\n\nLos operadores de nodos ganar√°n staking rewards una vez que se lance mainnet y se les anima a participar en el **Push Points Program** para ganar recompensas.\n\nSe anima a los primeros usuarios a participar en el **Push Points Program** para ganar recompensas. Comienza visitando [Push Portal](https://portal.push.org/).\n\n---",
  "developer-user-benefits": "### ¬øQu√© beneficios ofrece Push Chain a desarrolladores y usuarios?\n\n**üßô Para Desarrolladores**\n\n- **Despliega Una Vez, 10√ó Tu Alcance**  \nDespliega tu app una sola vez ‚Äî sin cambios de c√≥digo ‚Äî y se ejecuta en cada cadena compatible, incluso en redes non-EVM.\n\n- **Compatible con EVM al 100%, F√°cil de Auditar**  \nUtiliza contratos Solidity existentes sin auditor√≠as o reescrituras adicionales ‚Äî enfoca tu presupuesto en funciones, no en infraestructura.\n\n- **UX Unificado y Sin Fricciones**  \nLos usuarios firman una sola transacci√≥n, pagan en cualquier token e interact√∫an a trav√©s de cualquier wallet ‚Äî tu app simplemente funciona en todas partes.\n\n- **DX Ultrarr√°pido**  \nPon en marcha con nuestros SDKs, editores virtuales y playgrounds de React; pasa de cero a activo en minutos.\n\n**ü¶π Para Usuarios**\n\n- **Incorporaci√≥n con Un Clic**  \nInicia sesi√≥n con correo electr√≥nico, redes sociales o cualquier wallet existente ‚Äî no m√°s frases semilla o saltos de cadena.\n\n- **Interacciones Sin Problemas**  \nLas complejidades de gas, wallet y cadena est√°n ocultas ‚Äî disfruta de las apps como si fueran nativas de tu red.\n\n- **Somos R√°pidos**  \nLas transacciones se finalizan en 1-2 segundos, se siente como si fueran nativas de la cadena en la que est√°s.\n\n---",
  "how-to-build": "### ¬øC√≥mo pueden los desarrolladores empezar a construir en Push Chain?\n\nüöÄ Visita nuestro [Documentation Hub](/docs/) para obtener todo lo que necesitas:\n\n- üñ•Ô∏è **Virtual Code Editors**: Inicia llamadas de funci√≥n SDK en tu navegador  \n- ‚öõÔ∏è **React Playground**: Crea prototipos de tu frontend en tiempo real  \n- üìö **End-to-End Examples**: Sigue tutoriales completos de proyectos  \n\nTendr√°s una app de ejemplo en funcionamiento en minutos‚Äî¬°no se requiere configuraci√≥n local!\n\n---",
  "dao-section": "## DAO y Subvenciones",
  "governance-changes": "### ¬øC√≥mo cambiar√° el sistema de gobernanza actual con el lanzamiento del nuevo token?\n\nEl sistema de gobernanza del Push DAO evolucionar√° y se expandir√° a medida que se lance Push Chain. Este es un proceso esperado, ya que Push se est√° convirtiendo en algo m√°s amplio que el original.\n\nLos delegados, los programas de embajadores, los subDAOs y otras iniciativas de la DAO se actualizar√°n para reflejar los objetivos clave de lograr el estatus de centro para aplicaciones universales, gestionadas por todos los grupos que las hacen posibles.\n\n---",
  "doubts-section": "## Dudas",
  "push-services-future": "### ¬øQu√© pasa con las notificaciones push y el chat push?\n\nPush Chain es una evoluci√≥n natural de la visi√≥n de Push Protocol. Los servicios actuales de Push Protocol siguen siendo una prioridad, garantizando que contin√∫en mejorando mientras se benefician de la nueva infraestructura.\n\nLos protocolos actuales de notificaciones push y chat se beneficiar√°n significativamente al estar construidos sobre Push Chain. Una secci√≥n dedicada del equipo se centrar√° en mantener y mejorar estos protocolos, asegurando que sigan siendo el est√°ndar de facto en sus respectivos dominios.\n\nAl alinearse con Push Chain, las notificaciones y el chat enviados a trav√©s de los protocolos se procesar√°n como transactions en la cadena. Esta integraci√≥n no solo permite que estos protocolos acumulen valor, sino que tambi√©n marca el comienzo de un nuevo cap√≠tulo en su evoluci√≥n, mejorando a√∫n m√°s su utilidad e impacto dentro del ecosistema web3.\n\n---",
  "project-distraction": "### ¬øEs este proyecto una distracci√≥n de la mejora de los servicios actuales?\n\nNo, lee ‚òùÔ∏è [arriba](#what-happens-to-push-notification-and-push-chat).\n\n---",
  "core-focus-shift": "### ¬øEs Push Chain un cambio de rumbo con respecto al enfoque principal de Push Protocol en notificaciones y chat?\n\nNo. Push Chain se basa en la s√≥lida base establecida por Push Protocol. Push Chain representa la **siguiente evoluci√≥n** de Push Protocol, no una desviaci√≥n.\n\n---",
  "partnerships-effect": "### ¬øC√≥mo afectar√° el lanzamiento de Push Chain a las asociaciones e integraciones existentes?\n\nPush Chain complementa las asociaciones existentes ofreciendo capacidades adicionales como soporte cross-chain, finality m√°s r√°pida y soluciones escalables. Fortalece las colaboraciones permitiendo a los socios construir y escalar aplicaciones universales.\n\n---",
  "decentralization-scaling": "### ¬øC√≥mo mantendr√° Push Chain la descentralizaci√≥n mientras escala?\n\nNuestra Devnet demostr√≥ c√≥mo escalaremos usando sharding din√°mico y ejecuci√≥n paralela‚Äîaumentando el rendimiento sin comprometer la descentralizaci√≥n.\n\nEn testnet, nos centramos en la interoperabilidad completa con la cadena que se ejecuta en [CometBFT](https://github.com/cometbft/cometbft), un motor tolerante a fallas bizantinas probado en batalla. La red logr√≥ una finalidad inferior a un segundo y tiene la capacidad de manejar hasta [20k transactions per minute](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md).\n\nEsta prueba de concepto es solo el comienzo. A medida que implementamos m√°s optimizaciones de escalado en fases posteriores, confiamos en que Push Chain pueda satisfacer las demandas de aplicaciones universales‚Äîde forma segura y sin centralizaci√≥n.\n\n---",
  "centralization-risks": "### ¬øExisten riesgos de centralizaci√≥n con Push Chain?\n\n**No.** La arquitectura de Push Chain enfatiza la descentralizaci√≥n.\n\nPush Chain es completamente descentralizado y est√° dise√±ado para ser robusto y resistente. Cualquiera puede ejecutar un nodo y participar en la red y es incentivado o penalizado a trav√©s de PoS. En resumen:\n\n- Los validadores y otros actores operan de forma independiente y est√°n incentivados a trav√©s de PoS.\n- Los mecanismos de gobernanza aseguran la participaci√≥n de la comunidad.\n- Cada participante del ecosistema est√° incluido en la gobernanza en cierta medida.\n\nPara obtener m√°s informaci√≥n sobre c√≥mo ejecutar un nodo, consulte nuestra [Base de Conocimiento](/knowledge/) o revise nuestro [Repo de Nodos Validator](https://github.com/pushchain/push-chain-node).\n\n---",
  "support-section": "## Soporte e Interacci√≥n",
  "need-help": "### Necesito ayuda, ¬ød√≥nde puedo contactar a Push Chain?\n\nPara soporte, puedes [enviar un ticket aqu√≠](https://push.org/support) o ponerte en contacto con nosotros en support@push.org.\n\nSi eres desarrollador, tambi√©n puedes contactarnos en nuestro [Discord](https://discord.com/invite/pushchain) y estaremos encantados de ayudarte.\n\n---",
  "how-to-contribute": "### ¬°Genial, c√≥mo puedo contribuir?\n\nLa mejor manera de estar al tanto del progreso de Push Chain es a trav√©s de los canales oficiales de Push: sitio web, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject), y [Discord](https://discord.com/invite/pushchain).\n\nSiempre ten precauci√≥n con los intentos de phishing, sitios web falsos o estafas que soliciten tus criptomonedas. Todas las comunicaciones oficiales se realizar√°n desde nuestros canales oficiales de Push.\n\n---"
}