{
  "pages": {
    "knowledge": {
      "faq": {
        "seo": {
          "title": "Preguntas frecuentes ‚Äî Preguntas frecuentes seleccionadas",
          "description": "Respuestas r√°pidas sobre wallets, comisiones, cadenas soportadas y c√≥mo empezar.",
          "og-title": "Preguntas frecuentes de Push Chain - Todas las preguntas",
          "og-description": "Encuentra respuestas r√°pidas con enlaces a gu√≠as, testnet y soporte.",
          "twitter-title": "Preguntas frecuentes - Comienza aqu√≠",
          "twitter-description": "Respuestas r√°pidas a las preguntas sobre Push Chain."
        },
        "explainer-section": {
          "breadcrumbs": {
            "knowledge-base": "Base de conocimiento"
          },
          "blocks": {
            "title": "Preguntas frecuentes",
            "sections": {
              "faq-overview": {
                "items": {
                  "overview": "## Descripci√≥n general\n\nEl lugar para encontrar respuestas a todas las preguntas populares que ha hecho la comunidad sobre Push Chain. Obtenido de forma colaborativa por Push Fam ü´∂ y curado por el equipo de Push üí™.\n\n---",
                  "what-is-push-chain": "### ¬øQu√© es Push Chain?\n\nPush Chain es una Blockchain de Capa 1 de estado compartido creada para eliminar la fragmentaci√≥n entre todas las cadenas.\n\nAl habilitar **transacciones sin problemas desde cualquier cadena** (Ethereum, Solana, EVM o no-EVM), permite a cualquier usuario interactuar con apps web3 sin tener que manejar m√∫ltiples wallets, tokens o mec√°nicas de gas.\n\nEn resumen, Push Chain une L1s ü§ù L2s ü§ù L3s bajo una capa cohesiva.\n\n---",
                  "how-does-push-chain-work": "### ¬øC√≥mo funciona Push Chain?\n\n![How Normal Apps Work](/assets/website/chain/knowledge/faq/normalapps.webp)\n\n![How Universal Apps Work](/assets/website/chain/knowledge/faq/universalapps.webp)\n\nPush Chain adopta un enfoque √∫nico para resolver el problema de la fragmentaci√≥n en todas las cadenas. En lugar de depender de **protocolos** de interoperabilidad, que a√±aden complejidad tanto para los usuarios como para los desarrolladores, adopta un nuevo enfoque al construir una verdadera **blockchain** universal que pueda ser utilizada de forma nativa por cualquier usuario desde cualquier cadena.\n\nPara lograr esto, Push Chain aprovecha varios **precompilados**, que son m√≥dulos personalizados creados para:\n\n1. **Reconocer** usuarios de otras cadenas - Est√°ndar de direcci√≥n universal que extiende la direcci√≥n de un usuario para que sea agn√≥stico a la cadena de bloques (basado en [est√°ndares CAIP-10](https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md)).\n\n2. **Asignar** usuarios a Push Chain - Se despliega una Cuenta de Ejecuci√≥n Universal (UEA) para cada usuario de cadena externa. Este m√≥dulo se utiliza para desplegar una cuenta inteligente que luego utiliza otros precompilados para procesar las transacciones.\n\n3. **Ejecutar** transacciones universales - Esto se hace utilizando los precompilados USV (Universal Signature Verification) y UTXV (Universal Transaction Verifier) para verificar y ejecutar firmas y transacciones de otras cadenas.\n\n4. **Abstraer** las complejidades de la cadena en la que se encuentran - Esto se hace teniendo contratos gateway universales en cada cadena que bloquea fondos de gas en el token nativo de la cadena (o cualquier otro token compatible) y luego utiliza los precompilados UTXV para atribuir el gas a la UEA (Cuenta de Ejecuci√≥n) y USV para ejecutar la transacci√≥n.\n\nEste es un **enfoque extremadamente poderoso** que permite a los usuarios interactuar con cualquier **app** en Push Chain sin preocuparse por la cadena en la que se encuentran o qu√© **wallet** est√°n utilizando, ya que todo est√° abstra√≠do tanto para los usuarios como para los desarrolladores.\n\n---",
                  "why-unique-for-users": "### ¬øPor qu√© es Push Chain √∫nico para los usuarios?\n\nPush Chain aborda deficiencias espec√≠ficas en las blockchains existentes, como la interoperabilidad, el acceso al estado entre cadenas, los solucionadores programables y la abstracci√≥n de la wallet, lo que resulta en una **verdadera interoperabilidad de pila completa**. Si bien las blockchains existentes son s√≥lidas, operan en su propio ecosistema y se necesita un agregador para unirlas.\n\nEl enfoque de Push Chain es ser una **cadena de estado compartido** para aplicaciones universales (interoperables) que act√∫e como una capa unificadora donde todas las cadenas puedan unirse y utilizar Push Chain como un centro universal o realizar liquidaciones entre ellas.\n\nOfrece un nuevo paradigma de Web3 que funciona desde **Cualquier Cadena.** Para **Cualquier Wallet / Usuario.** Y es adecuado para **Cualquier App.**\n\n---",
                  "core-innovations": "### ¬øQu√© hace que Push Chain sea innovadora?\n\n![Push Chain Architecture](/assets/website/chain/knowledge/faq/pcoverview.webp)\n\nPush Chain es una capa 1 Proof-of-Stake dise√±ada para eliminar la fragmentaci√≥n en todas las blockchains. En el fondo, combina varias innovaciones clave:\n\n- **Cadena Universal Real**  \n  Admite nativamente todas las cadenas y permite a los usuarios interactuar con la misma app. No se necesitan relayers centralizados, bridges u otras soluciones.\n\n- **Abstracci√≥n Universal de Tarifas y Wallets**  \n  Permite a los usuarios interactuar con la app desde cualquier cadena sin preocuparse por las tarifas o la mec√°nica de la wallet.\n\n- **Una sola transacci√≥n para cualquier cadena**  \n  Los usuarios solo firman una transacci√≥n, sin importar en qu√© cadena se encuentren.\n\n- **Smart Contracts Universales**  \n  Smart Contracts 100% compatibles con EVM que se pueden implementar con **cero cambios de c√≥digo en cadena**. Una vez implementados, se vuelven instant√°neamente compatibles con usuarios de todas las cadenas.\n\n- **EVM Universal**  \n  Push Chain es lo suficientemente inteligente como para reconocer nativamente a los usuarios de otras cadenas y atribuirles y mapearles correctamente las transacciones.\n\n- **Estado Compartido y Solucionadores Programables**  \n  (Roadmap) Permite que los smart Contracts de Push Chain lean y escriban estados en cualquier otra cadena.\n\nJuntos, estas caracter√≠sticas permiten construir **aplicaciones web3 universales**. En lugar de \"Uniswap en Ethereum\" o \"Uniswap en Polygon\", un usuario simplemente se convierte en **usuario de Uniswap** ‚Äî punto.\n\n---",
                  "problems-solved": "### ¬øQu√© problemas resuelve Push Chain?\n\n- **Fragmentaci√≥n**  \n  Unifica cadenas EVM y no EVM bajo una capa L1 de estado compartido, para que los usuarios nunca tengan que saltar entre redes o wallets.\n\n- **Interoperabilidad**  \n  Soporte nativo para transacciones desde cualquier blockchain y estado compartido en cadena.\n\n- **Finalidad**  \n  Finalidad nativa instant√°nea e irreversible en aproximadamente 1-2 segundos ‚Äì no esperes m√°s o reorgs.\n\n- **Incorporaci√≥n & UX**  \n  Inicio de sesi√≥n social/por correo electr√≥nico, gas en cualquier token y soporte para cualquier wallet para un acceso sin fricci√≥n en todas las cadenas.\n\n- **Aplicaciones universales**  \n  Construye una vez, despliega en todas partes ‚Äî cualquier aplicaci√≥n Web3 funciona sin problemas para cualquier usuario en cualquier cadena.\n\n---",
                  "what-apps-can-build": "### ¬øQu√© apps puedes construir en Push Chain?\n\n![Universal App Examples](/assets/website/chain/knowledge/faq/appusecases.webp)\n\nCon el shared-state y la arquitectura cross-chain de Push Chain, las posibilidades son infinitas. Aqu√≠ hay solo algunos ejemplos estrella:\n\n- **Universal DEX**  \n  Una interfaz de intercambio √∫nica para cada pool de liquidez ‚Äì enrutamiento abstracto en todas las cadenas con la velocidad y la experiencia de usuario de un CEX.\n\n- **Universal DeFi**  \n  Un banco global en tu navegador: pr√©stamos, cr√©ditos, agregadores de rendimiento que abarcan ecosistemas sin bridging manual.\n\n- **Universal AI Agents**  \n  Agentes aut√≥nomos que pagan y reciben pagos en cualquier token en cualquier cadena ‚Äì perfectos para servicios de suscripci√≥n, bots de datos y m√°s.\n\n- **Universal DAOs**  \n  Gobernanza cross-chain donde los poseedores de tokens votan y ejecutan propuestas independientemente de su cadena de origen.\n\n- **Universal Gaming**  \n  Torneos multijugador y econom√≠as dentro del juego que unen a jugadores y activos de Ethereum, Solana, Polygon y m√°s all√°.\n\n- **Universal Marketplace**  \n  Compra, vende e intercambia NFTs y tokens de cada cadena en un marketplace consolidado.\n\n- **Universal Name Service**  \n  Nombres legibles para humanos que se resuelven a wallets en m√∫ltiples blockchains.\n\nLas apps e innovaciones que se pueden desarrollar en Push Chain son infinitas! Aqu√≠ hay algunos [m√°s casos de uso](/blog/consumer-apps-that-can-be-built-on-push-chain/) para empezar. Los desarrolladores tambi√©n pueden consultar el [Documentation Hub](/docs/) para comenzar.\n\n---",
                  "technical-section": "## Technical",
                  "why-not-an-l2": "### ¬øPor qu√© L1 y no una L2?\n\nPush Chain est√° construida para funcionar como una **capa de liquidaci√≥n compartida** y **capa de ejecuci√≥n universal** para todas las dem√°s blockchains‚Äîroles que solo una L1 independiente puede cumplir:\n\n- **Liquidaci√≥n Nativa Inter-Chain**  \n  Como una L1, Push Chain puede finalizar directamente las transacciones de cualquier cadena sin depender de modelos de seguridad externos o pruebas de fraude.\n\n- **Ejecuci√≥n y Acceso al Estado Universales**  \n  Ejecutar su propio consenso y m√°quina de estado permite a Push Chain interpretar y ejecutar transacciones de Ethereum, Solana y m√°s all√°‚Äîalgo que una L2‚Äîvinculada a una capa base‚Äîno puede hacer de forma nativa.\n\n- **Sin Restricciones ni Retrasos de L2**  \n  Las L2 heredan la latencia, las reglas de finalizaci√≥n y el modelo de tarifas de su cadena anfitriona (m√°s la sobrecarga del bridging). Push Chain evita estos cuellos de botella ofreciendo finalizaci√≥n instant√°nea y abstracci√≥n universal de tarifas en la capa base.\n\n- **Estado Compartido Real**  \n  Para leer y escribir el estado de m√∫ltiples cadenas dentro de contratos inteligentes, necesitas acceso directo a nivel de protocolo‚Äîsolo disponible en la capa L1.\n\nEn resumen, solo una L1 construida con un prop√≥sito espec√≠fico puede unificar todas las cadenas bajo una capa cohesiva de ejecuci√≥n y liquidaci√≥n‚Äîsin complejidad adicional ni suposiciones de confianza a√±adidas.\n\n---",
                  "evm-compatibility": "### ¬øEs Push Chain compatible con EVM?\n\nS√≠, Push Chain es **compatible con EVM** y mucho m√°s. Soporta:\n\n- **Smart Contracts EVM**: Despliega contratos Solidity como en Ethereum\n- **Herramientas de Ethereum**: Usa MetaMask, Hardhat, Remix y otras herramientas familiares\n- **Extensiones universales**: Precompilaciones adicionales para funcionalidad cross-chain\n- **Soporte Multi-VM**: (Roadmap) Soporte para otras VMs como SVM (Solana), MoveVM, etc.\n\nEsto significa que los desarrolladores pueden:\n- Portar dApps existentes de Ethereum con cambios m√≠nimos\n- Usar flujos de trabajo y herramientas de desarrollo familiares\n- Acceder a capacidades cross-chain mejoradas a trav√©s de las caracter√≠sticas universales de Push Chain\n\nEn la pr√°ctica, los usuarios y las apps de cualquier cadena pueden interactuar con las apps de Push Chain sin problemas, independientemente de la VM subyacente.\n\n---",
                  "evm-non-evm-compatible": "### ¬øSer√° Push Chain compatible con cadenas EVM y no EVM?\n\n¬°S√≠! Push Chain est√° dise√±ado para tender puentes entre todos los paradigmas de la blockchain.\n\n- **Compatibilidad EVM**\n  Implementa tus contratos Solidity y se ejecutar√°n sin cambios, aprovechando el entorno de ejecuci√≥n EVM de Push Chain.\n\n- **Soporte no EVM**\n  Los precompilados nativos (USV/UTXV) y el est√°ndar de direcciones universal permiten a Push Chain validar y ejecutar transacciones de Solana, Bitcoin, cadenas Cosmos SDK y m√°s.\n\nEn la pr√°ctica, los usuarios y las aplicaciones de cualquier cadena pueden interactuar con las aplicaciones de Push Chain sin problemas, independientemente de la VM subyacente.\n\n---",
                  "why-not-ethereum-or-solana": "### ¬øPor qu√© crear una nueva blockchain cuando ya existen otras como Ethereum y Solana?\n\nLas blockchains existentes sobresalen en sus dominios espec√≠ficos pero crean **fragmentaci√≥n**:\n\n- **Ethereum**: Genial para DeFi pero caro y lento\n- **Solana**: R√°pido y barato pero con diferentes herramientas y ecosistema\n- **L2s**: Solucionan la escalabilidad pero crean m√°s fragmentaci√≥n\n\nPush Chain no compite con estas chains ‚Äî las **unifica**:\n\n- Los usuarios pueden interactuar con las apps de Push Chain usando sus wallets existentes (MetaMask, Phantom, etc.)\n- Pagan gas en sus tokens preferidos (ETH, SOL, USDC)\n- Los desarrolladores construyen una vez en lugar de desplegar en m√∫ltiples chains\n- La liquidez y los usuarios de todas las chains pueden interactuar en las mismas apps\n\nPush Chain es la **pieza faltante** que hace que todas las chains existentes funcionen juntas sin problemas.\n\n---",
                  "shared-state-meaning": "### ¬øQu√© significa blockchain de estado compartido?\n\nEl estado compartido se refiere al estado presente de los datos onchain. Una blockchain de estado compartido es aquella que tiene acceso de lectura y escritura a su propio estado y al estado de todas las dem√°s cadenas con las que interact√∫a.\n\nUna cadena de estado compartido es capaz de manejar datos, liquidez y usuarios de cualquier otra cadena.\n\n---",
                  "how-achieve-shared-state": "### ¬øC√≥mo logra Push Chain el estado compartido?\n\n![Push Chain Universal App](/assets/website/chain/knowledge/faq/pcuniversalapp.webp)\n\nA blockchain tradicional solo conoce su propio libro mayor y est√°ndar de wallet. Push Chain extiende ese modelo de cuatro maneras clave:\n\n1. **Compatibilidad Universal de Wallets**  \n\t- Soporta direcciones independientes de la cadena de cualquier cadena (Ethereum, Solana, Bitcoin, Cosmos SDK, etc.)  \n\t- Las firmas de cualquier cadena se verifican a trav√©s de precompilaciones USV/UTXV, por lo que los usuarios nunca cambian de wallets.\n\n2. **Smart Contracts Universales**  \n\t- Los contratos EVM se implementan sin cambios, pero pueden verificar y ejecutar transacciones entre cadenas de forma nativa.  \n\t- El tiempo de ejecuci√≥n de Push Chain maneja el mapeo de firmas y el an√°lisis de carga √∫til para cada red compatible.\n\n3. **Estado Compartido On-Chain**  \n\t- Los validadores comprometen pruebas Merkle del estado externo de la cadena (a trav√©s de ra√≠ces MPT) cada bloque.  \n\t- Los relayers obtienen y env√≠an pruebas de hoja bajo demanda, por lo que los contratos pueden leer los datos de cualquier cadena en tiempo real.\n\n4. **Solvers Programables**  \n\t- Una red de solvers ejecuta flujos de trabajo entre cadenas at√≥micos (por ejemplo, intercambio en Chain A, mint en Chain B) bajo una sola transacci√≥n.  \n\t- Los desarrolladores escriben scripts de solver simples; la red maneja el enrutamiento y la ejecuci√≥n.\n\nEn conjunto, estas caracter√≠sticas convierten a Push Chain en una **L1 de estado compartido** que permite que las apps universales sean nativas de todas las cadenas. Un mundo donde cualquier usuario de cualquier cadena puede acceder e interactuar con cualquier app en cualquier otra cadena.\n\n**Cualquier Cadena, Cualquier App, Cualquier Usuario - Una Push Chain**\n\n---",
                  "consensus-mechanism": "### ¬øQu√© mecanismo de consenso utiliza Push Chain?\n\nPush Chain utiliza el consenso **Proof-of-Stake (PoS)**, construido sobre el motor **CometBFT**, con varias mejoras:\n\n- **Finalidad R√°pida**: Las transacciones se finalizan en aproximadamente 1‚Äì2 segundos, con finalidad determinista (sin reorgs)\n- **Eficiencia Energ√©tica**: PoS es sostenible para el medio ambiente en comparaci√≥n con PoW\n- **Red de Validadores**: Red descentralizada de validadores que protegen la cadena\n- **Protecci√≥n contra Slashing**: Incentivos econ√≥micos aseguran la honestidad de los validadores\n\nEl consenso BFT probado en batalla de CometBFT est√° optimizado aqu√≠ para los requisitos √∫nicos del procesamiento universal de transacciones y la gesti√≥n de estado entre cadenas.\n\n---",
                  "transaction-fees": "### ¬øC√≥mo funcionan las tarifas de transacci√≥n en Push Chain?\n\nPush Chain revoluciona el pago de tarifas con **Universal Fee Abstraction**:\n\n- **Paga con Cualquier Token**: Los usuarios pueden pagar el gas en ETH, SOL, USDC o cualquier token soportado\n- **Pago de Tarifas Inter-Cadena**: Paga las tarifas desde tu cadena de origen sin necesidad de hacer un puente\n- **Transacciones Sin Gas**: Las apps pueden patrocinar las transacciones de los usuarios para una experiencia de usuario fluida\n- **Mercado de Tarifas Din√°mico**: Las tarifas se ajustan seg√∫n la demanda de la red\n\nEsto significa que los usuarios nunca necesitan adquirir tokens nativos de Push Chain solo para interactuar con las apps.\n\n---",
                  "true-universal-chain": "### ¬øQu√© significa Cadena Universal Verdadera?\n\nA **true universal chain** es una blockchain que trata a cada otra red como ciudadanos de primera clase: sin puentes, sin relayers centralizados y sin trucos de compatibilidad. Ofrece:\n\n1. **Identidad Multichain Nativa**\n\tWallets de Ethereum, Solana, cualquier cadena EVM o non-EVM, todas firman, verifican y ejecutan de forma nativa en Push Chain. As√≠ que los usuarios nunca cambian de cuenta ni se preocupan por la complejidad de m√∫ltiples wallets.\n\n2. **Liquidaci√≥n Unificada**\n\tLas transacciones de cualquier red se finalizan en Push Chain, brindando a todos una √∫nica fuente de verdad y permitiendo que la misma app sea accesible para usuarios de todas las cadenas.\n\n3. **Una Sola Transacci√≥n y Abstracci√≥n Universal de Tarifas**\n\tLos usuarios firman solo una transacci√≥n, independientemente de su cadena de origen y pagan gas en cualquier token. Ya no es necesario mantener o intercambiar innumerables tokens para usar una app.\n\n4. **Implementa Una Vez, Utiliza en Todas Partes**\n\tLos desarrolladores escriben e implementan smart contracts una vez (EVM o de otro tipo) con **cero** c√≥digo extra: una sola implementaci√≥n cubre todas las cadenas.\n\nPush Chain es la primera en incorporar estas caracter√≠sticas directamente en su consenso y tiempo de ejecuci√≥n, eliminando verdaderamente la fragmentaci√≥n: sin soluciones alternativas, sin capas adicionales, solo una cadena universal para todos.\n\n---",
                  "competitors-section": "## Competidores",
                  "vs-other-universal": "### ¬øQu√© diferencia a Push Chain de otras Soluciones Universales?\n\nLas soluciones \"universales\" de hoy en d√≠a todav√≠a dependen de puentes, requieren transacciones dobles o retransmisores centralizados para mover datos y valor. Push Chain es diferente: es la primera L1 verdaderamente universal que:\n\n- **Unifica a los usuarios entre cadenas**  \n\tCada direcci√≥n de blockchain es compatible de forma nativa. Billeteras como MetaMask, Phantom, etc., son todas compatibles con Push Chain. El gas se paga en cualquier token en cualquier cadena.\n\n- **Act√∫a como una capa de ejecuci√≥n universal**  \n\tTodas las transacciones se finalizan en la misma cadena, asegurando que todos interact√∫en con la misma app: sin trucos, sin soluciones provisionales.\n\n- **Atribuye y ejecuta correctamente las transacciones de cualquier cadena**  \n\tLas transacciones se firman, verifican y atribuyen a las billeteras en sus cadenas de origen. Una verdadera cadena universal las soporta todas.\n\n---",
                  "vs-bridges-messaging": "### ¬øC√≥mo se diferencia esto de los puentes o las capas de mensajer√≠a?\n\n**Respuesta corta**: Push es donde se ejecuta tu app. Los puentes/mensajer√≠a solo mueven <token>s o mensajes entre cadenas, lo que complica todo para los usuarios y desarrolladores.\n\n- **Un hogar √∫nico vs muchos clones**  \n\tCon puentes/mensajer√≠a, implementas por cadena y sincronizas mediante mensajes. En Push, implementas una vez; todos acceden al mismo contrato y al <shared-state>.\n\n- **Sin <token>s envueltos ni puentes obligatorios**  \n\tLos usuarios permanecen en su cadena de origen y pagan con lo que ya tienen; nosotros manejamos el enrutamiento y la conversi√≥n de tarifas en segundo plano.\n\n- **Identidad y verificaci√≥n unificadas**  \n\tAceptamos firmas de cualquier <wallet>/cadena y las atribuimos al mismo usuario en Push ‚Äî no custodial.\n\n- **Menos partes m√≥viles**  \n\tNo hay baile de aprobaci√≥n entre cadenas, no hay b√∫squeda de <token>s de <gas>, no hay contratos de pegamento que mantener sincronizados.\n\n- **Usa puentes cuando quieras, no porque debas**  \n\tLa <liquidity> a√∫n puede moverse a trav√©s de puentes, pero interactuar con tu app no lo requiere.\n\n**Resultado**: apps m√°s simples, una √∫nica fuente de verdad y una UX que se siente como una √∫nica cadena ‚Äî incluso cuando los usuarios no lo est√©n.\n\n---",
                  "vs-layerzero": "### ¬øC√≥mo se diferencia Push Chain de LayerZero?\n\n**LayerZero:**\n- **Protocolo de Mensajer√≠a**: Habilita el paso de mensajes entre cadenas\n- **Dependencia de Relayes**: Depende de relayes y or√°culos externos\n- **Integraci√≥n de Desarrolladores**: Las apps deben integrar el SDK de LayerZero\n- **Supuestos de Confianza**: Los usuarios deben confiar en la infraestructura de relayer\n\n**Push Chain:**\n- **Ejecuci√≥n Nativa**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **Sin Relayes**: Funcionalidad entre cadenas incorporada a nivel de protocolo\n- **Cero Integraci√≥n**: Las apps existentes funcionan sin modificaciones\n- **Confianza Minimizada**: No se requieren supuestos de confianza adicionales m√°s all√° del propio consenso de Push Chain\n\nPush Chain proporciona ejecuci√≥n nativa entre cadenas, mientras que LayerZero requiere infraestructura e integraci√≥n adicionales.\n\n---",
                  "vs-wormhole": "### ¬øC√≥mo se diferencia Push Chain de Wormhole?\n\n**Wormhole:**\n- **Protocolo de Puente**: Principalmente enfocado en el puente de Token y NFT\n- **Activos Envoltos**: Crea versiones envueltas de tokens en diferentes cadenas\n- **Red Guardian**: Se basa en el validator set para verificar los mensajes entre cadenas\n- **Proceso de Multi-pasos**: Los usuarios deben puentear los activos antes de usarlos en las apps\n\n**Push Chain:**\n- **Ejecuci√≥n Universal**: Los usuarios interact√∫an directamente sin puentear\n- **Activos Nativos**: No se necesitan tokens envueltos, usa los activos originales\n- **Verificaci√≥n Directa**: Verificaci√≥n nativa de firma desde cualquier cadena\n- **Transacci√≥n √önica**: Los usuarios interact√∫an en un solo paso, sin necesidad de puentear\n\nPush Chain elimina la necesidad de puentear activos, mientras que Wormhole lo requiere para las interacciones entre cadenas.\n\n---",
                  "vs-axelar": "### ¬øC√≥mo se diferencia Push Chain de Axelar?\n\n**Axelar:**\n- **Red de Redes**: Conecta cadenas a trav√©s de la red Axelar\n- **Dependencia de Validadores**: Depende del conjunto de validadores de Axelar para la seguridad\n- **Contratos de Puerta de Enlace**: Requiere implementaciones de puerta de enlace en cada cadena\n- **Paso de Mensajes**: Se centra en la comunicaci√≥n entre cadenas\n\n**Push Chain:**\n- **Ejecuci√≥n Directa**: Las transacciones se procesan de forma nativa en Push Chain sin intermediarios\n- **Seguridad Independiente**: Propio consenso sin dependencias externas\n- **Contratos Universales**: Una sola implementaci√≥n funciona para todas las cadenas\n- **Ejecuci√≥n Nativa**: Procesamiento directo de transacciones desde cualquier cadena\n\nPush Chain proporciona acceso universal directo, mientras que Axelar a√±ade una capa intermedia.\n\n---",
                  "vs-chainlink-ccip": "### ¬øC√≥mo se diferencia Push Chain de Chainlink CCIP?\n\n**Chainlink CCIP:**\n- **Red de Or√°culos**: Utiliza la infraestructura de or√°culos de Chainlink\n- **Enrutamiento de Mensajes**: Enruta mensajes entre diferentes cadenas\n- **Dependencia Externa**: Depende de la red descentralizada de Chainlink\n- **Integraci√≥n Requerida**: Las apps deben integrar CCIP para funciones cross-chain\n\n**Push Chain:**\n- **protocolo Integrado**: La funcionalidad cross-chain es nativa de la blockchain\n- **Ejecuci√≥n Directa**: No se necesita red de or√°culos externa\n- **Autocontenido**: Toda la verificaci√≥n y ejecuci√≥n ocurre en Push Chain\n- **Compatibilidad Autom√°tica**: Implementa contratos existentes ‚Äî funcionan autom√°ticamente para todos los usuarios\n\nPush Chain tiene capacidades cross-chain integradas en su protocolo central, mientras que CCIP es una capa de servicio externa.\n\n---",
                  "vs-particle-network": "### ¬øC√≥mo se diferencia Push Chain de Particle Network?\n\n**Particle Network:**\n- **Enfoque en Abstracci√≥n de Cuentas**: Se enfoca principalmente en la abstracci√≥n de billeteras y el inicio de sesi√≥n social\n- **Billeteras Multi-Cadena**: Crea una experiencia de billetera unificada en diferentes cadenas\n- **Integraci√≥n de SDK**: Requiere la integraci√≥n del SDK de Particle para su funcionalidad\n- **Capa de Experiencia de Usuario**: Opera como una capa sobre las cadenas existentes\n\n**Push Chain:**\n- **Blockchain Universal**: Blockchain nativa que soporta a todos los usuarios de diferentes cadenas\n- **Integraci√≥n a Nivel de Protocolo**: Funcionalidad multi-cadena integrada en el consenso\n- **No se requiere SDK**: Las billeteras existentes funcionan de forma nativa sin modificaci√≥n\n- **Capa Base**: Proporciona la infraestructura blockchain subyacente, no solo una capa de UX\n\nPush Chain es un blockchain universal mientras que Particle Network es un servicio de abstracci√≥n de billeteras.\n\n---",
                  "vs-agglayer": "### ¬øC√≥mo se diferencia Push Chain de AggLayer?\n\n**AggLayer (Polygon):**\n- **Capa de Agregaci√≥n**: Agrega liquidez y estado entre las cadenas de Polygon\n- **Ecosistema Polygon**: Dise√±ado espec√≠ficamente para las cadenas CDK de Polygon\n- **Secuenciaci√≥n Compartida**: Proporciona secuenciaci√≥n unificada para las cadenas conectadas\n- **Espec√≠fico del Ecosistema**: Limitado al ecosistema de cadenas de Polygon\n\n**Push Chain:**\n- **Cadena Universal**: Funciona con cualquier blockchain, no espec√≠fico del ecosistema\n- **Ejecuci√≥n Nativa**: Ejecuci√≥n directa de transacciones desde cualquier cadena\n- **Agn√≥stico a la Cadena**: Soporta Ethereum, Solana, Bitcoin y todos los dem√°s\n- **Una Implementaci√≥n, Aplicaciones Universales**: Implementa un smart contract una vez en Push Chain, y se vuelve accesible para usuarios desde cualquier cadena ‚Äî habilitando una verdadera interoperabilidad a nivel de aplicaci√≥n\n\nPush Chain habilita aplicaciones universales con una √∫nica implementaci√≥n en todas las blockchains, mientras que AggLayer se enfoca en la agregaci√≥n de liquidez y secuenciaci√≥n dentro del ecosistema Polygon.\n\n---",
                  "vs-cosmos": "### ¬øC√≥mo se diferencia Push Chain de Cosmos?\n\nSi bien ambos habilitan la funcionalidad cross-chain, los enfoques son fundamentalmente diferentes:\n\n**Cosmos:**\n- **Modelo Hub-and-Spoke**: Las cadenas se conectan a trav√©s del protocolo IBC\n- **Ecosistemas Separados**: Cada cadena mantiene su propio estado y usuarios\n- **Bridging Manual**: Los usuarios deben hacer bridging de activos entre cadenas\n- **Complejidad para Desarrolladores**: Necesidad de implementar en m√∫ltiples cadenas\n\n**Push Chain:**\n- **Cadena Universal**: Cadena √∫nica que soporta nativamente a todos los usuarios\n- **Shared State**: Un estado unificado accesible desde cualquier cadena\n- **No Bridging**: Los usuarios interact√∫an directamente desde su cadena de origen\n- **Implementar Una Vez**: Una √∫nica implementaci√≥n funciona para todos los usuarios de las cadenas\n\nPush Chain elimina la necesidad de bridging manual e implementaciones multi-cadena, ofreciendo una UX m√°s simple y unificada.\n\n---",
                  "vs-polkadot": "### ¬øC√≥mo se diferencia Push Chain de Polkadot?\n\n**Polkadot:**\n- **Modelo de Parachain**: Slots limitados para cadenas conectadas\n- **Dependencia de la Relay Chain**: Todas las parachains dependen de la seguridad de la relay chain\n- **Framework Substrate**: Requiere un framework de desarrollo espec√≠fico\n- **Sistema de Subasta**: Subastas costosas de slots de parachain\n\n**Push Chain:**\n- **Soporte Universal**: Admite nativamente cualquier cadena existente\n- **Seguridad Independiente**: Propio consenso y validator set\n- **Compatible con EVM**: Usa herramientas y contratos existentes de Ethereum\n- **Sin Subastas**: Integraci√≥n directa sin competencia de ofertas\n\nPush Chain se integra directamente con las cadenas existentes, mientras que Polkadot requiere que las cadenas se reconstruyan como parachains.\n\n---",
                  "token-section": "## Relacionado con el Token",
                  "new-token": "### ¬øHabr√° un nuevo <token> asociado con Push Chain?\n\nComo una nueva capa 1, Push Chain tendr√≠a su propio <token> nativo con <tokenomics> adaptados al funcionamiento, mantenimiento y seguridad de una <blockchain>.\n\nPara obtener todos los detalles, consulta nuestro [profundo an√°lisis de <tokenomics>](/knowledge/tokenomics/) üëÄ.\n\n---",
                  "developers-section": "## Desarrolladores, Usuarios y Operadores de Nodos",
                  "early-adopter-incentives": "### ¬øExisten incentivos para los primeros usuarios u operadores de nodos en Push Chain?\n\nLos operadores de nodos ganar√°n recompensas de staking una vez que se lance mainnet y se les anima a participar en el **Programa Push Points** para ganar recompensas.\n\nSe anima a los primeros usuarios a participar en el **Programa Push Points** para ganar recompensas. Comienza visitando [Push Portal](https://portal.push.org/).\n\n---",
                  "developer-user-benefits": "### ¬øQu√© beneficios ofrece Push Chain a desarrolladores y usuarios?\n\n**üßô Para Desarrolladores**\n\n- **Implementa una vez, multiplica tu alcance por 10**  \nImplementa tu App una sola vez ‚Äîsin cambios en el c√≥digo‚Äî y se ejecuta en cada cadena compatible, incluso en redes no EVM.\n\n- **Compatible al 100% con EVM, f√°cil de auditar**  \nUtiliza contratos Solidity existentes sin auditor√≠as o reescrituras adicionales‚Äîenfoca tu presupuesto en caracter√≠sticas, no en infraestructura.\n\n- **UX unificado y sin fricciones**  \nLos usuarios firman una sola transacci√≥n, pagan en cualquier token e interact√∫an a trav√©s de cualquier wallet ‚Äîtu app simplemente funciona en todas partes.\n\n- **DX ultrarr√°pido**  \nPon en marcha con nuestros SDKs, editores virtuales y React playgrounds; pasa de cero a activo en minutos.\n\n**ü¶π Para Usuarios**\n\n- **Incorporaci√≥n con un solo clic**  \nInicia sesi√≥n con correo electr√≥nico, redes sociales o cualquier wallet existente ‚Äîno m√°s frases semilla ni saltos entre cadenas.\n\n- **Interacciones fluidas**  \nLas complejidades de gas, wallet y cadena est√°n ocultas ‚Äîdisfruta de las apps como si fueran nativas de tu red.\n\n- **Somos r√°pidos**  \nLas transacciones se finalizan en 1-2 segundos, se siente como si fueran nativas de la cadena en la que te encuentras.\n\n---",
                  "how-to-build": "### ¬øC√≥mo pueden los desarrolladores empezar a construir en Push Chain?\n\nüöÄ Visita nuestro [Documentation Hub](/docs/) para obtener todo lo que necesitas:\n\n- üñ•Ô∏è **Editores de C√≥digo Virtuales**: Inicia llamadas a funciones SDK en tu navegador  \n- ‚öõÔ∏è **React Playground**: Prototipa tu frontend en tiempo real  \n- üìö **Ejemplos de Extremo a Extremo**: Sigue recorridos completos de proyectos  \n\nTendr√°s una app de ejemplo en funcionamiento en minutos, ¬°sin configuraci√≥n local!\n\n---",
                  "dao-section": "## DAO y Subvenciones",
                  "governance-changes": "### ¬øC√≥mo cambiar√° el sistema de governance actual con el lanzamiento del nuevo token?\n\nEl sistema de governance de Push DAO evolucionar√° y se expandir√° con el lanzamiento de Push Chain. Este es un proceso esperado, ya que Push se est√° convirtiendo en algo m√°s amplio que el original.\n\nLos delegados, los programas de embajadores, los subDAOs y otras iniciativas de la DAO se actualizar√°n para reflejar los objetivos clave de lograr el estatus como el centro para aplicaciones universales, ejecutadas por todos los grupos que las hacen posibles.\n\n---",
                  "doubts-section": "## Dudas",
                  "push-services-future": "### ¬øQu√© pasa con las notificaciones push y el chat push?\n\nPush Chain es una evoluci√≥n natural de la visi√≥n de Push Protocol. Los servicios actuales de Push Protocol siguen siendo una prioridad, garantizando que contin√∫en mejorando al mismo tiempo que se benefician de la nueva infraestructura.\n\nLos protocolos de notificaci√≥n push y chat actuales se beneficiar√°n significativamente al estar construidos sobre Push Chain. Una secci√≥n dedicada del equipo se centrar√° en mantener y mejorar estos protocolos, asegurando que sigan siendo el est√°ndar de facto en sus respectivos dominios.\n\nAl alinearse con Push Chain, las notificaciones y el chat enviados a trav√©s de los protocolos se procesar√°n como transacciones en la cadena. Esta integraci√≥n no solo permite que estos protocolos acumulen valor, sino que tambi√©n marca el comienzo de un nuevo cap√≠tulo en su evoluci√≥n, mejorando a√∫n m√°s su utilidad e impacto dentro del ecosistema web3.\n\n---",
                  "project-distraction": "### ¬øEste proyecto es una distracci√≥n de la mejora de los servicios actuales?\n\nNo, lee ‚òùÔ∏è [arriba](#what-happens-to-push-notification-and-push-chat).\n\n---",
                  "core-focus-shift": "### ¬øEs Push Chain un cambio de rumbo respecto al enfoque principal de Push Protocol en notificaciones y chat?\n\nNo. Push Chain se basa en la base establecida de Push Protocol. Push Chain representa la **pr√≥xima evoluci√≥n** de Push Protocol, no una desviaci√≥n.\n\n---",
                  "partnerships-effect": "### ¬øC√≥mo afectar√° el lanzamiento de Push Chain a las asociaciones e integraciones existentes?\n\nPush Chain complementa las asociaciones existentes ofreciendo capacidades adicionales como soporte cross-chain, finality m√°s r√°pida y soluciones escalables. Fortalece las colaboraciones al permitir a los socios construir y escalar aplicaciones universales.\n\n---",
                  "decentralization-scaling": "### ¬øC√≥mo mantendr√° Push Chain la descentralizaci√≥n mientras escala?\n\nNuestra Devnet demostr√≥ c√≥mo escalaremos utilizando sharding din√°mico y ejecuci√≥n paralela‚Äîaumentando el rendimiento sin comprometer la descentralizaci√≥n.\n\nEn testnet, nos enfocamos en la interoperabilidad completa con la cadena que se ejecuta en [CometBFT](https://github.com/cometbft/cometbft), un motor tolerante a fallas bizantinas probado en batalla. La red logr√≥ una finalidad subs√©condo y tiene la capacidad de manejar hasta [20k transactions per minute](https://github.com/push-protocol/push-chain/blob/main/docs/testnet-performance.md).\n\nEsta prueba de concepto es solo el comienzo. A medida que implementemos optimizaciones de escalado adicionales en fases posteriores, confiamos en que Push Chain pueda satisfacer las demandas de aplicaciones universales‚Äîde forma segura y sin centralizaci√≥n.\n\n---",
                  "centralization-risks": "### ¬øExisten riesgos de centralizaci√≥n con Push Chain?\n\n**No.** La arquitectura de Push Chain enfatiza la descentralizaci√≥n.\n\nPush Chain es completamente descentralizado y est√° dise√±ado para ser robusto y resistente. Cualquiera puede ejecutar un <node> y participar en la red y se incentiva o penaliza a trav√©s de PoS. En resumen:\n\n- Los <validator> y otros actores operan de forma independiente y se incentivan a trav√©s de PoS.\n- Los mecanismos de <governance> garantizan la participaci√≥n de la comunidad.\n- Cada parte del ecosistema est√° incluida en la <governance> en cierta medida.\n\nPara obtener m√°s informaci√≥n sobre c√≥mo ejecutar un <node>, consulta nuestra [Knowledge Base](/knowledge/) o consulta nuestro [Validator Node Repo](https://github.com/pushchain/push-chain-node).\n\n---",
                  "support-section": "## Soporte e Interacci√≥n",
                  "need-help": "### Necesito ayuda, ¬ød√≥nde puedo contactar a Push Chain?\n\nPara obtener soporte, puedes [enviar una solicitud aqu√≠](https://push.org/support) o comunicarte con nosotros en support@push.org.\n\nSi eres desarrollador, tambi√©n puedes comunicarte con nosotros en nuestro [Discord](https://discord.com/invite/pushchain) y estaremos encantados de ayudarte.\n\n---",
                  "how-to-contribute": "### ¬°Genial, ¬øc√≥mo puedo contribuir?\n\nLa mejor manera de estar al tanto del progreso de Push Chain es a trav√©s de los canales oficiales de Push: sitio web, [Twitter/X](https://x.com/PushChain), [Telegram](https://t.me/epnsproject) y [Discord](https://discord.com/invite/pushchain).\n\nSiempre ten precauci√≥n con los intentos de phishing, los sitios web falsos o las estafas que te soliciten tus criptomonedas. Todas las comunicaciones oficiales se realizar√°n desde nuestros canales oficiales de Push.\n\n---"
                }
              }
            }
          }
        }
      }
    }
  }
}